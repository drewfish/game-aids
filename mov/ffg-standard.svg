<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
PURPOSE
    In-game aid to present information to the player so that s/he can more
    easily/quickly make decisions about possible trade routes.
    In general, it is expected that the player will still spend much more
    time studying the board than this tool.

NON-PURPOSES
    * make decisions for player, or suggest/imply courses of action
    * contain all information
    * replace the board or pieces on it

LICENSE
    To the extent possible under law, Drew Folta has waived all copyright and
    related or neighboring rights to this work.

TODO
    * nicer icons
    * cursor over <text> in system popup should stay a pointer

FUTURE (in no particular order)
    * routes
        * customized curving
        * automagically snake between systems
        * decorate based on distance
        * decorate with nav points (and required numbers)
        * draw -all- possible routes between systems, gently dipping into intermediate systems
    * game config popup
        * enable black market
        * highlight tech
    * fairs popup
        * rotate (special encounter card)
    * system popup
        * player-set flags (for missions, or other reasons)
    * race popup
        * demands
        * player-set flags (for tech, or other reasons)
    * credits popup
    * telegates? (they affect route distances, if usable)
    * UI
        * rotatable (for tablets)
        * see if HTML5 pushState() works here
        * finesse colors more
        * curve system and race names around boundary
        * maybe a few quick animated transitions


ROUTES

    DECORATIONS
        buy             source
        sell            sink
        net             sink
        demands         sink
        fairs           sink
        nav points      middle
        telegates       middle
        black market    entire

-->
<svg 
    xmlns:svg="http://www.w3.org/2000/svg"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns="http://www.w3.org/2000/svg"
    version="1.1"
    width="1200px"
    height="800px">

    <defs>
        <style><![CDATA[
            svg {
                font-family: sans-serif;
                font-size: 12px;
            }
            .background { 
                fill: #003;
                stroke: none;
            }

            #map .system .boundary {
                fill: none;
                stroke: #009;
                stroke-width: 3;
            }
            #map .system.hazard .boundary {
                stroke: #601;
                stroke-dasharray: 6 3;
            }
            #map .system .name {
                fill: #22A;
                stroke: none;
                text-anchor: middle;
            }
            #map .path {
                fill: none;
                stroke: #009;
                stroke-width: 3;
                stroke-dasharray: 6 3;
            }
            #map .navpoint {
                fill: #000;
                fill-opacity: 0.2;
                stroke: #601;
                stroke-width: 2;
                stroke-opacity: 0.9;
            }
            #version {
                fill: none;
                stroke: #22A;
                text-anchor: end;
            }

            #routes .route .path {
                fill: none;
                stroke: #051;
                stroke-width: 3;
                stroke-linecap: butt;
            }
            #routes .route text {
                fill: #061;
                stroke: none;
            }
            #routes .route text.dst {
                fill: #0A3;
            }
            #routes .route text.left {
                text-anchor: start;
            }
            #routes .route text.middle {
                text-anchor: middle;
            }
            #routes .route text.right {
                text-anchor: end;
            }
            .arrowhead {
                fill: #051;
                stroke: none;
            }

            .popup {
                display: none;
            }
            .popup .mask {
                fill: #000;
                fill-opacity: 0.4;
            }
            .popup .background {
                stroke: #006;
                stroke-width: 3;
            }
            .popup .disabled {
                opacity: 0.4;
            }
            .popup text {
                fill: #55F;
                text-anchor: middle;
            }

            .icon path {
                fill: #55F;
                stroke: none;
            }
            .icon rect {
                fill: #003;
                stroke: none;
            }
        ]]></style>

        <symbol id="icon-sGH" class="icon" viewBox="0,0 300,200">
            <path d="M 21,190 c -7,0 -11,0 -10,-10 2,0 0,0 109,0 50,0 60,0 50,0 0,0 -20,0 -20,0 0,0 0,0 0,0 0,0 -30,0 -65,0 -36,0 -66,0 -67,0 -1,0 -3,0 -4,0 -7.5,-10 -4.8,-40 5,-60 0,0 1,0 0,0 0,0 0,0 1,0 0,0 1,0 2,-10 2,0 14,-22 20,-29 2,-2 5,-5 6,-7 5,-5 15,-14 19,-17 3,-1 6,-4 7,-5 4,-3 9,-6 21,-11 25,-12 55,-15 85,-9 0,1 10,2 10,4 0,1 10,1 10,2 10,1 30,18 40,25 0,1 0,2 0,2 10,0 10,0 10,1 0,0 0,4 0,9 40,35 60,105 30,105 0,0 -10,0 -10,0 0,0 0,0 -10,0 0,0 0,0 0,0 0,0 0,0 10,0 10,0 20,0 20,0 0,0 0,10 0,10 -10,0 -252,0 -269,0 z M 31,160 c 1,0 2,0 2,0 0,0 1,0 2,0 1,0 2,-10 2,-10 0,0 1,0 3,0 5,0 6,0 6,-10 -1,0 0,0 0,-10 1,0 1,0 2,0 0,0 3,-10 5,-10 3,0 4,0 7,-20 3,-11 16,-22 24,-17 0,0 0,3 1,7 0,10 2,10 7,20 2,0 4,0 4,0 0,10 1,10 2,10 2,0 2,0 2,0 0,10 -1,10 0,10 0,0 0,0 -1,0 -2,0 -1,10 1,10 10,10 10,10 10,20 0,0 0,10 10,0 0,0 0,-30 0,-30 0,-10 0,-10 0,-10 0,0 0,-10 0,-10 0,-10 0,-10 10,-10 10,0 10,0 10,-18 0,-24 10,-36 10,-29 10,2 10,5 10,34 0,8 0,13 0,13 0,10 0,10 0,0 0,-14 0,-22 0,-23 10,-4 20,6 20,11 -10,2 -10,12 0,12 0,0 0,10 -10,10 0,10 0,30 10,20 0,0 10,0 10,0 0,0 10,-10 10,-10 0,0 0,0 10,0 0,0 0,-10 0,-10 0,-10 10,-26 20,-26 0,0 0,2 0,26 l 0,30 0,0 c 10,10 10,10 10,10 0,10 0,10 0,10 0,0 0,0 0,-10 0,-20 0,-20 10,-30 0,0 20,10 20,30 0,0 0,20 10,10 0,0 -10,-50 -20,-64 -10,-2 -10,-4 -10,-5 0,-1 -20,-22 -20,-22 0,0 0,-2 -10,-5 -10,-9 -30,-20 -50,-22 -20,-3 -30,-2 -50,2 0,0 -10,1 -10,1 0,1 0,1 -10,4 0,1 -2,2 -2,2 -3,0 -18,9 -24,15 -2,1 -5,3 -7,5 -6,5 -18,18 -22,24 -2,3 -5,5 -6,5 -2,10 -4,10 -6,10 -1,10 -4,10 -5,20 -2,0 -4,10 -4,10 -1,0 -2,10 -3,10 -5,10 2,20 10,10 z" />
        </symbol>
        <symbol id="icon-r01" class="icon" viewBox="0,0 80,80" preserveAspectRatio="none">
            <rect x="0" y="0" width="80" height="80" />
            <path d="m 24,73 -2,0 0,-5 1,-6 -1,0 c -3,-2 -6,2 -4,6 l 1,2 -1,2 -2,1 0,-2 c 0,-1 0,-2 -1,-3 -1,0 -1,-2 -2,-4 l -1,-3 3,-3 c 2,-2 4,-3 4,-3 1,0 2,-1 3,-1 l 2,-2 -1,-2 c -1,-2 -2,-4 -2,-5 0,-2 -1,-5 -2,-7 l -3,-3 0,-4 0,-4 3,-3 c 2,-2 5,-4 6,-5 l 2,-2 -2,-2 c -1,-1 -3,-2 -4,-3 l -2,-2 0,-1 1,-1.3 1,2.1 1,2.2 2,0 c 1,0 3,1 4,2 l 2,1 0,3 0,3 -3,3 -4,3 0,4 0,4 2,1 c 4,4 6,0 2,-4 l -2,-3 1,-2 c 3,-3 6,-3 11,0 l 3,2 3,-2 c 2,-1 4,-2 6,-3 l 3,0 2,2 1,3 -2,2 c -1,2 -2,4 -2,5 l 0,2 1,0 c 1,0 2,-1 3,-2 l 2,-2 0,-3 0,-4 -3,-3 -4,-3 0,-3 c 0,-3 2,-6 5,-6 0,0 2,-1 3,-2 l 2,-2 0,1.9 0,2.1 -3,1 c -2,1 -3,2 -3,3 l -1,1 2,1 c 1,1 3,3 5,5 l 4,3 0,5 0,4 -2,3 -3,3 0,4 c 0,2 -1,4 -1,5 l -1,2 5,3 5,3 1,3 0,2 -2,4 -2,4 1,1 c 0,1 -1,1 -2,0 l -1,-2 1,-3 1,-3 -2,-2 c -1,0 -2,-1 -3,-1 l -1,1 0,2 c 0,1 0,4 0,6 l 1,3 -7,0 c -7,0 -8,-1 -6,-3 l 1,-1 4,1 3,0 0,-1 0,-2 -3,-1 c -2,0 -7,0 -12,0 l -8,0 -3,2 c -3,2 -2,3 3,2 l 4,0 0,1 0,2 -3,0 c -1,0 -3,0 -4,0 -2,0 -3,1 -4,0 z M 45,58 c 0,-1 0,-8 0,-14 l 0,-12 -5,0 -6,0 -1,3 c -1,3 -1,3 2,3 l 2,0 0,12 0,11 4,0 5,0 -1,-3 z M 32,48 c 0,-1 -1,-2 -2,-3 l -1,-1 -1,1 -1,1 2,2 c 1,2 3,3 3,0 z m 21,-3 c 0,-1 -1,-1 -1,-1 -2,0 -4,4 -3,5 l 0,1 2,-2 c 1,-1 2,-3 2,-3 z M 11,23 8.8,21 9.4,18 C 9.8,16 10,14 11,14 l 1,-1 -1,2 0,2 1,2 c 1,0 2,1 4,1 2,0 3,1 1,3 -2,3 -4,2 -6,0 z m 52,-1 -2,-2 2,0 c 2,0 4,-1 5,-2 l 1,-1 0,-2 -1,-2 2,1 c 4,6 -3,13 -7,8 z" />
        </symbol>
        <symbol id="icon-r02" class="icon" viewBox="0,0 80,80" preserveAspectRatio="none">
            <rect x="0" y="0" width="80" height="80" />
            <path d="M 38,74 C 37,73 37,69 37,64 l 1,-5 -1,-1 -2,-1 -1,1 -2,1 0,5 c 0,5 -1,7 -3,6 -1,-1 -1,-7 0,-11 l 1,-3 -1,-2 -2,-1 -1,1 c -1,2 -2,4 -2,6 l 0,3 -2,0 -2,0 0,-2 c 0,-2 0,-4 1,-6 2,-4 0,-4 -3,0 -3,3 -4,4 -5,2 -1,-1 1,-3 5,-6 3,-2 3,-3 2,-5 l -1,-1 -2,1 c -2,2 -4,3 -4,1 0,0 1,-2 3,-3 l 2,-2 0,-4 -1,-3 2,-2 1,-2 -1,-1 c -1,-1 -2,-2 -2,-3 l 0,-1 2,0 2,0 0,-2 0,-1 -4,-3 c -4,-3 -5,-5 -3,-5 1,0 3,2 5,3 3,4 4,5 6,3 l 1,-2 -4,-4 C 19,13 16,10 14,9.2 l -2,-2.3 1,-1.2 1,-1.2 6,6.5 5,6 2,0 c 1,0 2,-1 3,-1 l 0,-1 -4,-4 C 22,6.9 21,6 24,6 c 0,0 2,2 4,4 3,5 6,6 7,4 1,0 0,-1 0,-2 -2,-2.9 0,-3.8 2,-1 l 2,2 2,-2 c 1,-1.1 3,-1.8 3,-1.4 l 1,0.4 -1,2 c -1,1 -1,3 1,3 1,0 3,-2 5,-4 2,-3.6 4,-5 5,-5 2,0 1,2.1 -3,5 l -3,4 0,1 c 1,0 2,1 3,1 l 2,0 5,-6 C 61,7.7 64,5.1 64,5.3 67,6 66,8 62,11 53,17 51,20 55,22 l 1,0 4,-3 c 2,-3 4,-4 5,-4 l 1,1 -2,2 c -1,1 -4,3 -5,4 l -2,2 0,1 c 1,0 2,1 3,1 2,0 3,1 0,3 l -1,2 1,2 c 2,2 3,4 1,4 -1,0 -1,1 -1,2 l 0,2 3,3 4,3 -2,1 c -1,0 -2,-1 -3,-1 -2,-2 -4,-2 -4,0 0,1 2,3 4,5 4,3 5,6 3,6 -1,0 -3,-2 -4,-4 l -3,-3 0,1 c -1,0 -1,2 0,3 1,2 1,4 1,6 l 0,2 -2,0 -2,0 0,-3 c 0,-2 -1,-4 -1,-6 l -2,-1 -2,1 -1,2 1,5 c 1,6 1,9 -1,9 l -1,-1 -1,-5 0,-6 -2,0 c 0,-1 -2,-1 -3,0 l -1,0 0,7 c 1,3 1,7 1,8 -1,2 -3,3 -4,1 z m 15,-26 0,-3 -2,0 c -1,0 -5,0 -9,0 l -7,0 -1,-2 0,-2 7,-2 c 4,-1 8,-3 10,-4 l 2,-2 0,-5 0,-5 -2,-1 -2,-1 -11,0 -11,1 -1,2 0,3 9,0 10,0 0,2 0,2 -8,2 c -4,2 -9,4 -9,5 l -2,2 0,5 c 0,2 0,5 1,5 0,1 6,1 13,1 l 13,0 0,-3 z" />
        </symbol>
        <symbol id="icon-r03" class="icon" viewBox="0,0 80,80" preserveAspectRatio="none">
            <rect x="0" y="0" width="80" height="80" />
            <path d="m 30,71 c -9,-2 -14,-4 -16,-7 -2,-3 -1,-3 5,0 2,1 6,2 8,3 l 4,0 4,-1 4,-1 4,1 4,2 5,-1 c 3,-1 7,-3 9,-3 l 3,-2 0,1 c 0,1 -1,2 -3,4 l -2,2 -7,1 c -12,3 -13,3 -22,1 z m 15,-7 c -2,-1 -8,-1 -14,0 l -5,0 -5,-2 C 14,59 13,57 9.6,50 L 7,45 7,39 7,33 7.9,34 c 0.5,0 1.6,3 2.1,6 l 2,6 4,4 c 1,3 4,5 4,5 1,0 1,0 -2,-7 -2,-3 -3,-7 -4,-9 l 0,-4 -4.3,-4 -4,-4 1,-1 1.1,-1 2.1,1 2.1,1 2,-1 c 3,-1 4,-4 4,-8 l 0,-3 1,0 c 1,0 2,1 4,2 4,3 10,0 12,-7 1,-1 2,-2.5 3,-3.1 l 2,-1.1 2,1.8 c 1,0.9 2,2.3 2,3.4 0,0 1,3 3,4 l 3,4 2,0 c 2,0 4,-1 5,-2 3,-2 4,-2 4,2 0,2 1,5 2,6 l 1,2 4,0 4,0 0,2 c 0,0 -2,2 -3,3 l -4,2 -1,7 c -1,3 -3,8 -5,10 -3,5 -2,6 2,2 3,-3 7,-10 8,-16 l 1,-3 1,2 c 1,4 -1,11 -4,17 l -3,6 -3,1 c -7,4 -13,6 -16,4 z m 5,-9 c 1,-1 1,-7 1,-13 l 0,-12 -1,-2 -1,-1 -11,0 -10,0 0,3 1,3 7,0 8,0 0,3 0,3 -6,0 -6,0 0,2 0,3 2,1 c 2,0 4,0 5,0 1,0 2,0 3,0 l 2,0 0,2 0,3 -8,0 -8,1 0,2 0,3 7,0 c 8,1 14,0 15,-1 z" />
        </symbol>
        <symbol id="icon-r04" class="icon" viewBox="0,0 80,80" preserveAspectRatio="none">
            <rect x="0" y="0" width="80" height="80" />
            <path d="m 25,73 c 1,-1 1,-5 2,-8 0,-3 0,-5 1,-5 0,0 1,1 3,1 1,1 3,2 4,2 l 2,0 0,3 0,4 -6,3 -6,3 0,-3 z m 24,0 c -3,-1 -6,-3 -6,-3 0,0 0,-1 0,-3 l -1,-3 2,-1 c 1,0 3,-1 5,-2 l 3,-1 0,1 c 1,1 3,15 3,15 0,0 -3,-1 -6,-3 z M 14,67 c 0,-2 4,-19 5,-18 0,1 1,3 2,4 l 2,3 0,4 0,4 -4,2 c -3,1 -5,2 -5,1 z m 47,-1 -4,-2 0,-4 -1,-3 3,-5 2,-4 2,6 c 1,6 3,14 3,14 0,0 -2,-1 -5,-2 z M 32,59 C 27,57 23,53 21,48 l -1,-4 0,-4 c 1,-9 7,-15 15,-17 l 4,-1 5,1 5,1 4,3 c 4,4 6,8 6,15 l 0,4 -2,5 -2,4 -5,3 -4,3 -6,0 -5,0 -3,-2 z m 19,-7 0,-3 2,0 1,0 0,-3 0,-3 -1,0 -2,0 0,-8 0,-8 -6,-1 -5,0 -8,7 -7,7 0,5 0,4 9,0 8,0 0,1 c 0,1 0,2 0,3 1,0 1,1 1,2 l 0,1 4,0 4,0 0,-4 z M 33,42 c 0,-1 4,-5 7,-7 l 2,-2 0,5 0,5 -4,0 c -3,0 -5,0 -5,-1 z M 6,54 c 0,0 0.9,-3 2,-6 1.2,-3 2,-6 3,-7 l 0,-1 3,2 2,3 -1,3 -1,3 -3,2 c -2.6,1 -5,1 -5,1 z m 62,-2 -3,-1 0,-3 -1,-3 2,-3 c 2,-3 2,-3 5,4 3,9 3,9 -3,6 z M 14,39 c -1,-1 -1,-4 -1,-6 l 0,-3 2,-3 c 2,-1 3,-2 3,-1 -1,0 0,2 1,3 l 1,3 -1,3 c -1,1 -1,3 -1,5 0,3 -2,3 -4,-1 z m 48,1 c 0,-1 -1,-4 -1,-5 l -2,-3 2,-4 2,-3 2,3 c 1,2 2,5 2,6 l 0,3 -2,3 -3,3 0,-3 z M 22,23 c -1,-3 -2,-6 -2,-8 -1,-2 -1,-4 -1,-3 1,0 4,6 6,10 l 1,3 -1,1 -2,1 -1,-4 z m 33,3 -1,-2 1,-4 c 1,-3 3,-6 4,-7 l 2,-2 -1,2 c 0,1 -1,4 -2,8 l -2,6 -1,-1 z M 26,20 C 25,18 23,14 21,11 L 18,5.9 20,7 c 11,6 16,16 7,16 0,0 0,-1 -1,-3 z m 23,2 c -4,-2 -2,-6 7,-12.8 6,-3.8 6,-3.5 3,0.8 -2,2 -4,6 -5,8 -1,3 -2,5 -2,5 0,0 -2,-1 -3,-1 z" />
        </symbol>
        <symbol id="icon-r05" class="icon" viewBox="0,0 80,80" preserveAspectRatio="none">
            <rect x="0" y="0" width="80" height="80" />
            <path d="m 15,66 -5,-5 0,-5 0,-5 1,0 1,0 0,-10 0,-10 -1,-1 c -1,0 -1,-2 -1,-5 l 0,-6 4,-4 5,-4 5,0 6,0 0,1 0,1 10,0 10,0 1,-1 c 0,-1 2,-1 5,-1 l 6,0 4,4 4,5 0,5 0,5 -1,1 -1,0 0,10 0,10 1,0 1,1 0,5 0,5 -5,5 -4,4 -5,0 c -3,0 -5,0 -5,-1 l -1,-1 -10,0 -10,0 0,1 c -1,1 -3,1 -6,1 l -5,0 -4,-5 z m 14,3 1,-1 10,0 10,0 1,1 0,1 5,0 5,0 4,-4 4,-5 0,-4 0,-5 -1,-1 -1,0 0,-10 0,-9 1,-1 1,-1 0,-5 0,-4 -4,-5 -4,-4 -5,0 -5,0 -1,1 0,2 -10,0 -9,0 -1,-2 -1,-1 -5,0 -4,0 -5,4 -4,4 0,5 0,5 1,0 1,1 0,10 1,10 -2,0 -1,1 0,5 0,4 4,5 4,4 5,0 5,0 0,-1 z m -12,-5 -3,-4 0,-3 0,-4 2,-1 2,-1 -1,-1 -1,-1 0,-8 0,-8 1,-1 1,-1 -2,-2 -2,-1 0,-3 0,-4 3,-3 4,-3 3,0 4,0 0,2 c 1,2 3,3 4,1 l 0,-1 8,0 8,0 1,1 1,1 1,-2 1,-2 4,0 4,0 3,3 3,4 0,3 0,4 -2,1 -2,1 1,1 1,1 0,8 0,8 -1,1 -1,1 2,1 3,2 0,3 -1,3 -3,3 -3,4 -4,0 -3,0 -1,-2 -2,-2 -1,1 -1,1 -8,0 -8,0 -1,-1 -1,-1 -2,2 -1,2 -3,0 -3,0 -4,-3 z m 8,-4 1,-2 -1,-2 -2,-1 -1,0 c -1,1 -2,2 -3,3 l 0,1 2,2 c 2,1 3,1 4,-1 z m 35,1 c 1,-2 1,-5 -1,-5 -2,-1 -3,-1 -4,1 l -1,2 2,1 c 1,2 2,2 4,1 z m -9,-6 3,-1 0,-7 0,-7 -2,-1 c -1,-1 -5,-1 -9,-1 l -8,0 0,-3 0,-3 10,0 9,0 0,-3 0,-2 -13,0 -13,0 -1,8 0,9 9,0 10,0 0,3 0,3 -9,0 -10,0 0,2 c 0,2 0,3 1,3 1,1 21,1 23,0 z m -26,-31 1,-1 -1,-2 -2,-1 -1,0 c -1,1 -2,2 -3,3 l 0,1 1,2 c 2,1 5,1 5,-2 z m 35,1 1,-2 -1,-1 c -2,-3 -4,-2 -5,0 l -1,2 2,1 c 1,2 3,2 4,0 z" />
        </symbol>
        <symbol id="icon-r06" class="icon" viewBox="0,0 80,80" preserveAspectRatio="none">
            <rect x="0" y="0" width="80" height="80" />
            <path d="m 40,75 c 4,0 5,-1 8,-4 3,-2 4,-5 4,-8 1,-3 0,-4 0,-4 -1,0 -2,2 -2,4 0,2 -1,5 -3,7 -3,2 -4,3 -7,3 -6,0 -11,-5 -11,-10 -1,-4 -2,-4 -2,0 0,3 1,5 3,7 5,6 3,6 -3,0 -2,-2 -2,-4 -2,-8 0,-3 -1,-6 -1,-7 -1,0 -4,-1 -7,-1 -5,0 -6,0 -9.8,-4 C 3.2,46 3,45 3,39 3,33 3.2,33 6.8,29 10,25 11,25 17,25 c 3,0 6,-1 7,-1 0,-1 1,-4 1,-7 0,-6 0,-6 4,-10.5 C 33,2.1 33,2 39,2 c 6,0 7,0.2 11,4.3 4,3.7 4,4.7 4,10.7 0,3 1,6 1,7 1,0 4,1 7,1 6,0 7,0 11,4 4,4 4,5 4,10 0,6 0,7 -4,11 -4,4 -5,4 -11,4 -3,0 -6,1 -7,1 0,1 -1,4 -1,7 0,6 0,7 -4,10 -4,4 -5,4 -10,4 l -5,0 5,-1 z M 20,51 C 19,50 17,50 16,50 11,50 6.6,45 6.4,40 6.3,36 6.8,35 9.8,32 13,29 14,28 17,28 c 2,0 3,0 3,-1 0,-1 -2,-1 -4,-1 -3,0 -4,1 -7.8,4 -3.8,4 -4.2,5 -4.2,9 0,5 0.4,6 3.7,9 3.3,3 4.3,4 8.3,4 2,0 4,0 4,-1 z m 30,0 c 2,0 2,-2 2,-8 0,-5 0,-8 -1,-9 -1,-1 -4,-1 -9,-1 -7,0 -8,0 -8,-2 0,-2 1,-2 9,-2 9,0 9,0 9,-2 l 0,-3 -12,0 c -11,0 -12,0 -13,2 -1,3 -1,23 0,25 1,1 20,2 23,0 z m -16,-8 0,-5 6,0 5,0 0,5 0,4 -5,0 -6,0 0,-4 z m 36,4 c 2,-3 3,-4 3,-7 0,-6 -5,-11 -9,-11 -3,0 -3,0 -2,1 1,2 1,17 0,19 -1,1 -1,1 2,1 1,0 4,-1 6,-3 z M 29,16 c 0,-2 1,-4 3,-6.7 3,-2.8 4,-3.3 8,-3.3 6,0 10,3.5 10,9 1,6 3,6 3,1 C 53,12 52,11 49,7.8 46,4.3 45,4 40,4 35,4 34,4.3 31,7.7 28,11 27,12 27,16 c 0,2 0,4 1,4 1,-1 1,-3 1,-4 z" />
        </symbol>
        <symbol id="icon-r07" class="icon" viewBox="0,0 80,80" preserveAspectRatio="none">
            <rect x="0" y="0" width="80" height="80" />
            <path d="m 42,74 c -1,0 -1,-3 -1,-7 0,-5 1,-6 3,-6 2,0 2,0 2,6 0,7 -1,9 -4,7 z m -8,-7 c 0,-6 0,-6 2,-6 2,0 3,1 3,7 0,6 0,6 -2,6 -3,0 -3,0 -3,-7 z m 18,4 c -2,0 -2,-1 -2,-5 0,-4 1,-5 5,-5 3,0 5,-2 10,-6 6,-6 6,-6 8,-4 2,2 2,2 0,5 -5,6 -15,16 -17,16 -1,0 -3,0 -4,-1 z M 14,62 C 9.4,58 6,53 6,53 c 0,-1 0.7,-2 1.6,-3 1.3,-1 2.4,0 7.4,5 6,5 7,6 11,6 l 4,0 0,5 0,5 -4,0 c -5,0 -5,0 -12,-9 z m 10,-5 c -1,0 -1,-5 -1,-10 l 0,-9 -6,-6 c -3,-4 -6,-7 -6,-7 1,-2 8,-9 9,-9 1,0 3,1 4,3 3,3 4,3 16,3 l 13,1 3,-4 c 2,-2 4,-3 5,-3 0,0 3,2 5,5 l 4,5 -6,6 c -3,3 -6,6 -6,8 -1,1 -1,5 -1,10 l 0,8 -16,0 c -9,0 -17,0 -17,-1 z m 14,-3 c 2,-2 13,-24 13,-25 0,-2 -1,-2 -11,-2 -11,0 -12,0 -12,2 0,2 0,2 8,2 l 8,1 -6,10 c -2,6 -5,11 -5,12 0,1 5,1 5,0 z M 9.6,43 2.7,36 4.4,34 c 2.8,-5 4.4,-5 9.6,1 5,4 5,5 5,10 0,3 0,5 -1,5 -1,0 -5,-3 -8.4,-7 z M 62,49 c -1,0 -1,-2 -1,-4 0,-4 1,-5 5,-10 3,-3 6,-5 6,-5 2,0 5,4 5,6 0,2 -12,14 -14,14 0,0 -1,0 -1,-1 z M 27,17 C 24,14 24,13 27,9.3 L 30,6 40,6 51,6 53,9.3 c 4,3.7 4,4.7 1,7.7 -2,2 -4,2 -14,2 -10,0 -11,0 -13,-2 z" />
        </symbol>
        <symbol id="icon-r08" class="icon" viewBox="0,0 80,80" preserveAspectRatio="none">
            <rect x="0" y="0" width="80" height="80" />
            <path d="m 29,78 c 0,-1 -1,-2 -1,-2 l -1,-1 1,-2 c 1,-1 2,-3 2,-3 C 30,68 9.2,60 6,61 L 4,62 4,58 4,54 9.7,51 C 13,49 17,47 18,46 l 2,0 1,-3 c 0,-3 0,-3 -4,-3 -1,0 -4,-1 -5,-2 C 11,37 9.9,36 9.2,37 L 8,37 8,36 c 0,-1 1,-3 2,-5 2,-1 4,-4 5,-7 l 2,-4 0,-5 c 0,-5 0,-7 2,-7 l 1,0 0,1.7 C 19,11 19,13 20,15 l 1,3 3,0 2,0 0,-1 0,-1 1,1 c 2,1 0,4 -3,5 l -3,0 -3,5 -2,6 3,0 c 2,1 4,1 4,1 0,0 0,-2 1,-4 l 2,-4 3,-2 c 4,-2 4,-2 3,-6 -1,-1 -2,-4 -2,-6 l 0,-3.8 2,-2.3 2,-2.4 0,3.1 0,3.2 2,0.2 1,1 0,2 -1,2 3,0 4,0 0,-2 0,-3 2,-0.4 1,-0.6 0,-2.5 c -1,-3.7 1,-3 3,1 l 1,3.5 -1,4 c 0,2 -1,4 -1,5 l -1,2 2,0 c 3,2 7,5 8,8 l 0,3 2,0 c 1,0 2,0 3,-1 l 2,-1 -3,-5 -2,-5 -3,0 -3,0 -1,-2 c 0,-3 1,-4 2,-2 3,3 6,-1 6,-7.4 l 0,-2.8 2,1.2 1,1.2 0,5.8 0,6 2,1 c 1,1 2,3 1,3 0,0 1,2 3,5 2,2 3,4 3,5 l 0,1 -1,-1 -1,0 -2,2 -1,2 -4,0 -4,0 0,3 c 1,1 1,3 1,3 3,0 14,6 16,8 l 2,3 0,2 -1,3 -2,-1 c -2,0 -16,4 -21,7 l -3,2 2,3 1,2 -1,1 c 0,0 -1,1 -1,2 l 0,1 -4,-4 c -2,-3 -4,-6 -4,-7 l 0,-1 3,0 3,0 2,-2 c 2,-2 4,-3 5,-3 l 3,-1 0,-1 c -1,-1 0,-2 0,-2 1,-1 1,-1 1,-2 -1,0 -3,1 -5,3 -4,4 -7,5 -7,3 0,0 -4,-1 -8,-1 -5,0 -9,1 -9,1 0,1 -1,1 -2,1 l -1,0 0,2 1,2 3,0 4,0 0,2 c 0,1 -7,11 -8,11 0,0 0,-1 0,-1 z M 25,59 c -4,-3 -6,-4 -4,-1 1,0 1,1 0,1 -1,0 3,3 5,3 l 2,0 -3,-3 z m 26,-6 1,-2 0,-4 c -1,-3 -1,-5 -1,-6 0,-2 0,-5 0,-7 l 0,-5 -1,-1 C 48,27 34,27 32,28 l -2,1 0,5 0,6 1,1 1,0 -1,1 c -1,1 -1,11 0,12 0,1 5,1 10,1 l 9,0 1,-2 z M 36,48 c -1,-5 -1,-5 5,-5 l 5,0 0,4 0,4 -5,0 -5,0 0,-3 z m 0,-10 c -1,0 -1,-2 -1,-3 l 0,-3 6,0 5,0 0,4 0,3 -5,0 c -2,0 -5,0 -5,-1 z" />
        </symbol>
        <symbol id="icon-r09" class="icon" viewBox="0,0 80,80" preserveAspectRatio="none">
            <rect x="0" y="0" width="80" height="80" />
            <path d="m 38,78 c -1,-1 -1,-14 0,-16 0,-1 1,-2 2,-2 2,0 2,1 2,8 0,4 0,9 -1,9 0,2 -2,3 -3,1 z m 7,-10 c -1,0 -1,-3 -1,-5 0,-4 0,-5 2,-5 2,0 2,1 2,5 0,3 0,5 -1,5 -1,1 -2,1 -2,0 z M 31,67 c 0,-2 1,-8 2,-9 2,-2 3,0 3,5 0,4 0,5 -2,5 -1,0 -2,-1 -3,-1 z M 19,62 C 15,61 11,57 8.4,53 6.4,49 6.6,41 9,37 c 2,-3 2,-3 5,-1 l 3,1 -2,4 c -4,7 1,15 9,15 3,0 3,0 3,2 -1,5 -2,5 -8,4 z m 34,-2 c 0,-4 0,-4 3,-4 8,0 13,-8 10,-14 -1,-2 -2,-3 -2,-3 1,-1 6,-3 6,-3 1,0 1,1 2,3 5,11 -3,24 -15,24 -4,0 -4,0 -4,-3 z M 34,56 c -3,-1 -5,-2 -5,-3 -1,0 -3,-1 -5,0 -2,0 -3,0 -5,-2 -4,-3 -4,-7 -1,-10 1,-2 2,-5 3,-7 0,-2 1,-5 2,-6 1,-3 7,-8 9,-9 0,0 1,-2 2,-3 3,-6.4 11,-6.5 14,-1 0,2 2,4 3,5 5,3 9,9 9,15 0,2 1,5 2,7 0,1 1,3 1,4 0,3 -3,7 -5,7 -4,0 -7,1 -10,2 -5,2 -9,2 -14,1 z M 50,50 C 51,49 52,46 52,39 52,23 53,23 42,23 30,22 30,22 30,32 l 1,9 7,0 c 7,0 8,1 8,3 0,1 -1,2 -8,2 -8,0 -10,1 -9,3 1,2 3,2 10,2 5,0 10,0 11,-1 z M 37,36 c -1,0 -1,-2 -1,-5 l 0,-4 5,0 5,0 0,5 0,5 -4,0 c -3,0 -5,0 -5,-1 z m 25,-5 c 0,-2 7,-6 10,-6 2,1 1,3 -3,5 -5,4 -7,4 -7,1 z M 13,30 c -4.3,-4 -4.9,-6 -1,-6 2,0 8,5 8,7 -1,2 -3,1 -7,-1 z m 0,-8 C 5.4,17 3.4,15 6.3,14 8,13 22,23 22,24 c 0,3 -2,3 -9,-2 z m 47,4 c 0,-2 2,-4 10,-8 4,-3 6,-3 7,-2 2,1 1,3 -7,7 -7,4 -10,5 -10,3 z M 20,19 c -4,-2 -5,-4 -3,-5 1,-1 9,4 9,6 -1,2 -2,2 -6,-1 z m 36,2 c 0,-2 8,-7 10,-7 2,1 1,3 -2,6 -4,2 -8,3 -8,1 z M 48,12 C 44,8 44,7.8 40,8.3 37,8.7 35,9.7 33,12 c -3,3 -3,3 -6,2 -1,-1 -2,-2 -2,-3 0,-1.9 5,-6.4 8,-8.1 9,-4 16,-1.7 23,7.1 1,2 1,2 -2,4 l -2,2 -4,-4 z" />
        </symbol>
        <symbol id="icon-r10" class="icon" viewBox="0,0 84,84" preserveAspectRatio="none">
            <rect x="0" y="0" width="84" height="84" />
            <path d="m 32,78 c -1,0 -1,-3 0,-6 l 1,-2 -2,-2 c -1,-1 -2,-3 -2,-5 l 0,-1 -3,0 c -2,0 -4,0 -5,1 l -1,1 1,3 1,3 -1,1 c -1,0 -2,1 -3,1 l -2,0 -1,-2 0,-1 1,-1 c 1,-1 1,-2 1,-4 0,-1 1,-2 2,-3 l 2,-2 -1,-2 -1,-2 1,-1 1,-2 -1,-2 -2,-4 -2,0 -2,-1 0,-4 0,-5 2,-1 3,0 1,-4 1,-2 -1,-2 -1,-1 1,-2 1,-1 -2,-2 c -1,-2 -2,-3 -2,-5 0,-1 0,-2 -1,-3 l -1,-1 1,-2 c 1,-1.8 3,-1.9 5,0 l 1,1 -1,2 c -1,3 -1,4 1,6 l 2,2 0,-1 1,-1 2,1 2,0 0,-2 c 0,-1 1,-3 1,-4 1,-1 3,-2 3,-3 L 34,9 32,5.9 c -2,-4.95 2,-8.4 5,-4.6 l 1,1.5 -1,1.9 c -1,1 -1,3.3 -1,4.8 l 0,3.5 -2,2 c -2,1 -4,5 -4,5 1,0 2,0 3,-1 l 3,-1 0,-2 0,-2 5,0 5,0 1,2 c 1,2 3,4 4,4 1,0 0,-3 -2,-5 -2,-3 -3,-4 -3,-8.8 l 0,-2.9 2,0 2,0 0,2.6 0,2.7 0,0 c -1,0 -1,0.4 -1,0.9 0,1.5 6,10.5 6,9.5 1,0 2,0 2,1 l 2,1 2,-2 c 2,-2 3,-3 0,-7 l -1,-2 1,-1.1 2,-1.5 2,0.7 2,0.6 0,1.3 c 0,1 0,2 -1,2 -1,1 -1,2 -1,4 0,1 -1,4 -2,5 l -2,2 1,2 1,1 -1,2 -1,2 2,2 1,3 2,1 2,0 0,5 0,5 -2,0 -3,1 -1,3 -1,2 1,2 1,2 -1,2 -1,1 2,2 2,3 0,5 1,4 -1,1 -2,0 -2,-1 -1,-2 1,-1 c 1,-3 1,-6 0,-8 l -2,-1 -1,1 -2,1 -1,-1 -2,-1 0,2 0,3 -2,2 c -2,2 -3,5 -1,7 0,0 0,2 0,2 l 0,2 -3,0 -2,0 0,-2 c 1,-7 2,-8 4,-11 l 2,-3 -1,0 c 0,-1 -3,0 -4,2 l 0,2 -5,0 -5,0 -1,-2 c 0,-2 -4,-4 -5,-3 0,1 1,3 3,5 1,2 3,3 3,3 0,1 0,2 0,3 l 1,2 -1,2 c -1,2 -2,2 -4,1 z m 0,-38 0,-13 -3,0 -4,0 0,2 c -1,1 -1,2 1,2 l 2,0 -1,12 0,10 3,0 2,0 0,-13 z m 26,11 c 0,-1 0,-5 0,-12 l 1,-10 -2,-1 c -1,-1 -5,-1 -9,-1 l -8,0 -1,2 -1,1 -1,9 c 0,6 1,11 1,12 l 1,2 10,0 8,0 1,-2 z M 44,49 c -1,0 -1,-4 -1,-8 1,-4 1,-8 1,-9 l 0,-1 5,0 4,0 0,8 c 0,4 0,9 -1,9 l 0,2 -4,0 c -2,0 -4,0 -4,-1 z" />
        </symbol>
        <symbol id="icon-r11" class="icon" viewBox="0,0 84,84" preserveAspectRatio="none">
            <rect x="0" y="0" width="84" height="84" />
            <path d="m 54,73 -4,-4 -5,1 c -5,3 -6,3 -11,0 l -4,-2 -5,5 C 19,79 18,79 12,75 2.5,70 0.95,64 8.1,58 l 4.9,-5 0,-12 0,-12 9,-4 8,-4 0,-8 C 29,4.8 30,3.8 41,3.8 50,3.8 51,4.7 52,14 l 0,7 8,5 8,4 0,13 -1,12 4,4 c 7,6 5,12 -5,18 -6,3 -6,3 -12,-4 z m 17,-4 c 2,-4 2,-4 -7,-12 l -6,-5 -5,4 c -2,2 -4,4 -4,5 -1,0 2,5 7,10 l 5,5 4,-2 c 3,-2 5,-4 6,-5 z m -12,3 -2,-2 5,-4 c 5,-6 5,-6 8,-2 l 1,2 -3,4 c -6,5 -6,5 -9,2 z m -7,-8 -2,-2 4,-4 4,-4 3,2 c 4,3 4,3 -1,7 -5,5 -5,5 -8,1 z M 27,56 c -5,-5 -5,-5 -16,3 -5.9,5 -5.1,9 3,14 l 4,2 7,-6 6,-8 -4,-5 z M 12,70 c -4,-4 -4.4,-6 -2,-8 3,-2 3,-2 7,3 l 5,4 -2,2 c -3,3 -3,3 -8,-1 z m 7,-7 c -4,-4 -4,-5 0,-8 4,-2 11,4 9,8 -3,4 -4,4 -9,0 z M 35,52 c 1,-2 1,-7 1,-12 l 0,-10 -4,0 c -3,0 -5,3 -3,4 1,1 1,3 1,12 0,11 4,16 5,6 z m 15,-1 c 0,-2 0,-8 0,-12 l 0,-8 -3,-1 c -5,0 -8,4 -4,5 2,0 2,1 2,11 l 0,10 3,0 c 2,0 2,0 2,-5 z M 49,17 C 50,7.4 50,6.7 41,6.7 c -9,0 -9,0.2 -9,7.3 0,13 0,13 8,13 8,1 8,1 9,-10 z m -9,8 -6,0 0,-3 c 0,-4 2,-5 9,-4 3,0 4,1 4,3 0,4 -1,5 -7,4 z M 34,12 c 0,-1 0,-2 0,-2.5 0,-3.6 13,-1.4 14,2.5 l 0,3 -7,0 c -7,0 -7,-1 -7,-3 z" />
        </symbol>
        <symbol id="icon-r12" class="icon" viewBox="0,0 80,80" preserveAspectRatio="none">
            <rect x="0" y="0" width="80" height="80" />
            <path d="m 47,76 c 2,-3 2,-4 1,-7 -1,-5 -4,-5 -3,0 0,4 -1,4 -3,1 -1,-4 -4,-4 -6,0 l -2,4 0,-4 c 1,-5 -1,-6 -3,-3 -1,1 -1,3 -1,6 l 1,4 -3,-2 c -2,-3 -2,-4 -2,-10 -1,-4 -1,-4 -7,-3 -2,1 -2,1 -2,-1 3,-7 3,-7 -3,-7 C 10,54 8.5,53 6.1,51 2.4,48 2,46 5.5,49 c 3.2,2 8.5,0 9.5,-2 0,-2 0,-2 -3,-2 -4,1 -4.5,0 -1,-2 4,-3 4,-4 -1,-6 L 6.5,35 11,35 c 3,1 4,0 4,-1 C 17,31 6.9,30 4.1,32 3,33 3,33 3.9,31 5.5,28 8.7,27 14,26 c 6,0 6,0 4,-5 0,-3 0,-3 2,-3 6,3 7,3 7,-3 0,-5 2,-8.2 5,-10 2,-0.9 2,-0.8 0,1.8 -1,3.2 0,8.2 2,9.2 2,0 2,0 2,-3 -1,-4.2 0,-5.4 2,-2 2,4 4,4 6,0 l 2,-3.5 0,4.5 c -1,3 -1,4 1,4 3,0 4,-6.1 2,-10.1 C 48,4 48,4 50,5 c 3,1.6 5,6 5,12 0,3 0,4 2,4 5,-3 6,-2 6,1 -2,5 -2,5 2,6 1,0 3,0 4,0 1,0 3,1 5,3 l 4,3 -3,-1 c -5,-2 -10,0 -10,2 0,2 0,2 4,1 4,0 4,1 0,3 -2,1 -3,2 -3,3 0,0 1,2 3,3 4,2 4,2 0,2 -3,-1 -4,-1 -4,1 0,3 7,4 10,2 1,-1 1,-1 1,0 0,2 -5,5 -10,5 -5,0 -6,1 -4,7 1,2 1,2 0,2 -1,-1 -3,-1 -5,-2 l -4,0 1,3 c 0,4 -2,10 -6,12 l -2,1 1,-2 z m 11,-22 0,-3 -7,0 C 40,51 39,48 48,44 62,40 63,28 49,27 37,26 35,27 35,30 c 0,2 1,3 8,3 10,0 11,3 2,6 -9,3 -10,4 -10,11 -1,7 -1,7 13,7 l 10,0 0,-3 z M 31,42 c 1,-15 1,-14 -4,-15 -5,-1 -10,5 -5,6 2,0 2,1 2,11 0,6 0,11 0,11 0,1 2,1 3,1 l 4,0 0,-14 z" />
        </symbol>
        <symbol id="icon-r13" class="icon" viewBox="0,0 80,80" preserveAspectRatio="none">
            <rect x="0" y="0" width="80" height="80" />
            <path d="m 24,75 c 9,-7 14,-14 11,-14 -1,0 -2,1 -3,2 -1,2 -2,2 -4,1 -3,-1 -3,-2 -2,-3 2,-1 3,-4 1,-4 0,0 -1,1 -2,1 -1,2 -13,11 -13,10 0,-1 3,-4 6,-8 5,-7 6,-10 2,-7 -2,2 -2,2 -3,0 -1,-4 -1,-5 2,-6 2,-1 2,-1 1,-2 C 19,43 12,48 7.3,54 5.5,56 4,58 4,58 4,56 7.5,49 11,45 l 3,-4 -3,-4 C 8,33 4.5,26 5.3,25 c 0.3,0 1.4,1 2.6,3 3.1,5 9.1,10 12.1,10 1,0 1,0 -1,-2 -3,-3 -3,-3 -2,-5 2,-3 3,-3 4,0 1,1 2,2 3,2 1,0 1,2 1,11 l 0,11 3,0 4,0 0,-14 0,-14 -5,0 c -5,0 -6,0 -12,-10 -3,-4 -2,-4 6,3 7,5 12,7 6,2 -1,-1 -1,-2 2,-3 2,-1 2,-1 5,2 1,1 2,2 3,2 1,-2 -3,-8 -8,-13 -3,-2 -5,-4 -5,-4 2,0 9,4 13,7 l 3,3 4,-3 C 48,9.7 57,5.5 58,6.3 58,6.6 57,7.5 55,8.3 49,11 42,21 43,23 c 1,0 4,-2 4,-4 1,-1 4,0 6,2 0,0 -1,1 -2,2 -1,3 -1,3 0,3 1,0 2,0 2,-1 1,-1 10,-8 13,-10 2,-1 -1,4 -6,10 l -3,4 -6,-1 c -13,-1 -15,-1 -15,2 0,2 0,3 7,3 l 7,0 0,3 c 0,3 0,3 -5,3 -6,0 -6,0 -6,3 0,2 0,2 6,2 5,0 5,0 5,3 l 0,3 -7,0 c -8,0 -8,0 -8,2 0,3 7,5 16,4 l 5,-1 5,6 c 5,8 5,9 -2,3 -3,-2 -7,-5 -7,-5 -3,-2 -4,0 -2,1 3,2 2,4 -1,4 -2,1 -3,1 -4,-1 -1,-1 -2,-2 -3,-2 -1,1 1,5 7,11 3,3 4,4 3,4 -2,0 -9,-4 -11,-7 l -2,-2 -3,2 c -2,2 -5,4 -7,5 -4,2 -7,3 -5,1 z M 72,57 C 69,52 62,45 60,45 c -3,0 -2,2 1,3 2,2 2,2 0,5 -3,7 -5,-4 -4,-20 0,-3 4,-4 5,-1 1,2 1,2 -2,5 -2,2 -2,2 0,2 1,0 4,-2 9,-6 3,-4 6,-6 5,-5 0,3 -5,10 -7,12 -2,1 -3,4 -1,4 1,0 6,8 8,12 1,5 1,5 -2,1 z" />
        </symbol>
        <symbol id="icon-r14" class="icon" viewBox="0,0 80,80" preserveAspectRatio="none">
            <rect x="0" y="0" width="80" height="80" />
            <path d="m 20,74 -5,-2 8,0 C 41,72 48,65 33,63 13,60 2.8,44 7.1,22 L 8.5,16 9.1,26 C 9.7,36 11,41 14,41 16,41 18,38 18,33 18,15 35,3.2 56,6.1 67,7.7 68,8.5 58,8.6 39,8.8 32,15 47,18 66,21 76,34 75,52 74,64 72,67 72,58 72,40 64,32 63,48 61,68 42,79 20,74 z M 32,40 c 0,-15 0,-15 -6,-14 -4,0 -7,5 -3,5 2,0 2,1 2,12 l 0,11 3,0 4,0 0,-14 z m 25,11 c 0,-3 0,-4 2,-4 0,0 1,-1 1,-3 0,-1 -1,-2 -1,-3 -2,0 -2,-2 -2,-8 l 0,-7 -5,0 C 46,26 35,37 35,43 l 1,4 7,0 7,0 0,4 c 0,3 0,3 4,3 3,0 3,0 3,-3 z M 43,40 c 0,0 2,-2 3,-5 l 4,-3 0,5 0,5 -3,0 c -2,0 -4,-1 -4,-2 z" />
        </symbol>
        <symbol id="icon-rUN" class="icon" viewBox="0,0 29,29" preserveAspectRatio="none">
            <rect x="0" y="0" width="29" height="29" />
            <path d="m 12 25 4 0 0 5 -4 0 0 -5 3.8 -2.9 -3.7 0 0 -3 c -0 -1.3 0.2 -2.4 0.5 -3.2 0.4 -0.8 1.1 -1.8 2.3 -2.9 l 1.8 -1.7 c 0.7 -0.7 1.3 -1.3 1.6 -2 0.3 -0.6 0.5 -1.2 0.5 -1.9 -0 -1.2 -0.4 -2.1 -1.3 -2.8 -0.8 -0.7 -2 -1.1 -3.4 -1.1 -1 0 -2.1 0.2 -3.3 0.7 -1.2 0.5 -2.4 1.1 -3.6 2 l 0 -3.7 c 1.2 -0.7 2.5 -1.3 3.7 -1.7 1.3 -0.4 2.6 -0.5 3.9 -0.5 2.4 0 4.3 0.6 5.8 1.9 1.5 1.3 2.2 2.9 2.2 5 -0 1 -0.2 1.9 -0.7 2.8 -0.5 0.9 -1.3 1.9 -2.5 3 l -1.7 1.7 c -0.6 0.6 -1 1.1 -1.3 1.4 -0.2 0.3 -0.4 0.7 -0.5 1 -0.1 0.3 -0.1 0.6 -0.2 1 -0 0.4 -0.1 0.9 -0.1 1.6 l 0 2.4" />
        </symbol>

        <marker id="arrowhead"
            viewBox="0 0 10 10" preserveAspectRatio="none"
            refX="7" refY="5"
            markerUnits="strokeWidth"
            markerWidth="2" markerHeight="4"
            orient="auto" >
            <path class="arrowhead" d="M 0,0 10,5, 0,10 z" />
        </marker>
    </defs>
    <script type="text/ecmascript"><![CDATA[
        var NS = {
                svg:    'http://www.w3.org/2000/svg',
                xlink:  'http://www.w3.org/1999/xlink'
            },
            SYSTEMS = {
                sAS: {
                    id: 'sAS',
                    name: 'Asteroid System',
                    sector: '11',
                    uiCenter: [ 735, 685 ],
                    raceID: null
                },
                sCW: {
                    id: 'sCW',
                    name: 'Colony World',
                    sector: '00',
                    uiCenter: [ 181, 353 ],
                    raceID: null
                },
                sDW: {
                    id: 'sDW',
                    name: 'Desert World',
                    sector: '10',
                    uiCenter: [ 484, 90 ],
                    raceID: null
                },
                sGH: {
                    id: 'sGH',
                    name: 'Galactic Hub',
                    sector: '11',
                    uiCenter: [ 429, 448 ]
                },
                sGP: {
                    id: 'sGP',
                    name: 'Giant Planet',
                    sector: '11',
                    uiCenter: [ 608, 520 ],
                    raceID: null
                },
                sIB: {
                    id: 'sIB',
                    name: 'Interstellar Biosphere',
                    sector: '00',
                    uiCenter: [ 348, 245 ],
                    raceID: null
                },
                sIM: {
                    id: 'sIM',
                    name: 'Inhabited Moon',
                    sector: '20',
                    uiCenter: [ 1027, 91 ],
                    raceID: null
                },
                sIW: {
                    id: 'sIW',
                    name: 'Ice World',
                    sector: '01',
                    uiCenter: [ 197, 714 ],
                    raceID: null
                },
                sJW: {
                    id: 'sJW',
                    name: 'Jungle World',
                    sector: '10',
                    uiCenter: [ 140, 534 ],
                    raceID: null
                },
                sMS: {
                    id: 'sMS',
                    name: 'Multi-Generational Ship',
                    sector: '21',
                    uiCenter: [ 885, 503 ],
                    raceID: null
                },
                sNH: {
                    id: 'sNH',
                    name: 'Nebula Habitat',
                    sector: '10',
                    uiCenter: [ 567, 341 ],
                    raceID: null
                },
                sPP: {
                    id: 'sPP',
                    name: 'Polluted Planet',
                    sector: '10',
                    uiCenter: [ 1041, 372 ],
                    raceID: null
                },
                sRP: {
                    id: 'sRP',
                    name: 'Trapped Rogue Planet',
                    sector: '00',
                    uiCenter: [ 142, 128 ],
                    raceID: null
                },
                sSG: {
                    id: 'sSG',
                    name: 'Supergiant',
                    sector: '01',
                    uiCenter: [ 363, 593 ],
                    hazard: true
                },
                sSN: {
                    id: 'sSN',
                    name: 'Supernova',
                    sector: '10',
                    uiCenter: [ 740, 73 ],
                    hazard: true
                },
                sWS: {
                    id: 'sWS',
                    name: 'War-Torn System',
                    sector: '21',
                    uiCenter: [ 1038, 693 ],
                    raceID: null
                },
                sWW: {
                    id: 'sWW',
                    name: 'Water World',
                    sector: '20',
                    uiCenter: [ 767, 222 ],
                    raceID: null
                }
            },
            RACES = {
                r01: {
                    id: 'r01',
                    number: 1,
                    name: 'Nillis',
                    good: {
                        name: 'Bionic Perfume',
                        buy: 80,
                        sell: 140,
                        sellAtNext: 4
                    },
                    techCommon: [ 'yellow', 'cargo' ],
                    techRacial: 'FUTURE',
                    systemID: null,
                    fairs: 'FUTURE',
                    demands: 'FUTURE'
                },
                r02: {
                    id: 'r02',
                    number: 2,
                    name: 'Volois',
                    good: {
                        name: 'Canned Traits',
                        buy: 140,
                        sell: 220,
                        sellAtNext: 4
                    },
                    techCommon: [ 'red', 'cargo' ],
                    techRacial: 'FUTURE',
                    systemID: null,
                    fairs: 'FUTURE',
                    demands: 'FUTURE'
                },
                r03: {
                    id: 'r03',
                    number: 3,
                    name: 'Graw',
                    good: {
                        name: 'Glorious Junk',
                        buy: 30,
                        sell: 80,
                        sellAtNext: 4
                    },
                    techCommon: [ 'yellow', 'shield' ],
                    techRacial: 'FUTURE',
                    systemID: null,
                    fairs: 'FUTURE',
                    demands: 'FUTURE'
                },
                r04: {
                    id: 'r04',
                    number: 4,
                    name: 'Niks',
                    good: {
                        name: 'Living Toys',
                        buy: 20,
                        sell: 60,
                        sellAtNext: 4
                    },
                    techCommon: [ 'yellow', 'cargo' ],
                    techRacial: 'FUTURE',
                    systemID: null,
                    fairs: 'FUTURE',
                    demands: 'FUTURE'
                },
                r05: {
                    id: 'r05',
                    number: 5,
                    name: 'Dell',
                    good: {
                        name: 'Finest Dust',
                        buy: 10,
                        sell: 50,
                        sellAtNext: 4
                    },
                    techCommon: [ 'red', 'cargo' ],
                    techRacial: 'FUTURE',
                    systemID: null,
                    fairs: 'FUTURE',
                    demands: 'FUTURE'
                },
                r06: {
                    id: 'r06',
                    number: 6,
                    name: 'Humans',
                    good: {
                        name: 'Rock Videos',
                        buy: 120,
                        sell: 200,
                        sellAtNext: 4
                    },
                    techCommon: [ 'red', 'shield' ],
                    techRacial: 'FUTURE',
                    systemID: null,
                    fairs: 'FUTURE',
                    demands: 'FUTURE'
                },
                r07: {
                    id: 'r07',
                    number: 7,
                    name: 'Shenna',
                    good: {
                        name: 'Melf Pelts',
                        buy: 50,
                        sell: 110,
                        sellAtNext: 4
                    },
                    techCommon: [ 'red', 'shield' ],
                    techRacial: 'FUTURE',
                    systemID: null,
                    fairs: 'FUTURE',
                    demands: 'FUTURE'
                },
                r08: {
                    id: 'r08',
                    number: 8,
                    name: 'Yxklyx',
                    good: {
                        name: 'Immortal Grease',
                        buy: 50,
                        sell: 100,
                        sellAtNext: 5
                    },
                    techCommon: [ 'yellow', 'laser' ],
                    techRacial: 'FUTURE',
                    systemID: null,
                    fairs: 'FUTURE',
                    demands: 'FUTURE'
                },
                r09: {
                    id: 'r09',
                    number: 9,
                    name: 'Zum',
                    good: {
                        name: 'Chicle Liquor',
                        buy: 40,
                        sell: 90,
                        sellAtNext: 4
                    },
                    techCommon: [ 'red', 'shield' ],
                    techRacial: 'FUTURE',
                    systemID: null,
                    fairs: 'FUTURE',
                    demands: 'FUTURE'
                },
                r10: {
                    id: 'r10',
                    number: 10,
                    name: 'Eeepeeep',
                    good: {
                        name: 'Pedigree Bolts',
                        buy: 200,
                        sell: 300,
                        sellAtNext: 4
                    },
                    techCommon: [ 'combo', 'laser' ],
                    techRacial: 'FUTURE',
                    systemID: null,
                    fairs: 'FUTURE',
                    demands: 'FUTURE'
                },
                r11: {
                    id: 'r11',
                    number: 11,
                    name: 'Whynoms',
                    good: {
                        name: 'Impossible Furniture',
                        buy: 110,
                        sell: 180,
                        sellAtNext: 5
                    },
                    techCommon: [ 'yellow', 'cargo' ],
                    techRacial: 'FUTURE',
                    systemID: null,
                    fairs: 'FUTURE',
                    demands: 'FUTURE'
                },
                r12: {
                    id: 'r12',
                    number: 12,
                    name: 'Cholos',
                    good: {
                        name: 'Designer Genes',
                        buy: 60,
                        sell: 120,
                        sellAtNext: 4
                    },
                    techCommon: [ 'yellow', 'cargo' ],
                    techRacial: 'FUTURE',
                    systemID: null,
                    fairs: 'FUTURE',
                    demands: 'FUTURE'
                },
                r13: {
                    id: 'r13',
                    number: 13,
                    name: 'Wollow',
                    good: {
                        name: 'Megalith Paperweight',
                        buy: 90,
                        sell: 160,
                        sellAtNext: 4
                    },
                    techCommon: [ 'yellow', 'shield' ],
                    techRacial: 'FUTURE',
                    systemID: null,
                    fairs: 'FUTURE',
                    demands: 'FUTURE'
                },
                r14: {
                    id: 'r14',
                    number: 14,
                    name: 'Qossoth',
                    good: {
                        name: 'Psychotic Sculpture',
                        buy: 160,
                        sell: 250,
                        sellAtNext: 4
                    },
                    techCommon: [ 'yellow', 'laser' ],
                    techRacial: 'FUTURE',
                    systemID: null,
                    fairs: 'FUTURE',
                    demands: 'FUTURE'
                }
            },
            ROUTES = {
                // id is "{a}-{b}" where {a} and {b} are always lexicographically sorted
                /*
                    id
                    systemsA
                    systemsB
                    distance        measured in systems (not dots)
                    enabled         [dynamic] null|object
                    telegates       [dynamic] FUTURE
                    nav points      [dynamic] FUTURE
                */
                'sAS-sCW': {
                    id: 'sAS-sCW',
                    systemA: 'sAS',
                    systemB: 'sCW',
                    distance: 3,
                    enabled: null
                },
                'sAS-sDW': {
                    id: 'sAS-sDW',
                    systemA: 'sAS',
                    systemB: 'sDW',
                    distance: 4,
                    enabled: null
                },
                'sAS-sGH': {
                    id: 'sAS-sGH',
                    systemA: 'sAS',
                    systemB: 'sGH',
                    distance: 4,
                    enabled: null
                },
                'sAS-sGP': {
                    id: 'sAS-sGP',
                    systemA: 'sAS',
                    systemB: 'sGP',
                    distance: 2,
                    enabled: null
                },
                'sAS-sIB': {
                    id: 'sAS-sIB',
                    systemA: 'sAS',
                    systemB: 'sIB',
                    distance: 4,
                    enabled: null
                },
                'sAS-sIM': {
                    id: 'sAS-sIM',
                    systemA: 'sAS',
                    systemB: 'sIM',
                    distance: 3,
                    enabled: null
                },
                'sAS-sIW': {
                    id: 'sAS-sIW',
                    systemA: 'sAS',
                    systemB: 'sIW',
                    distance: 1,
                    enabled: null
                },
                'sAS-sJW': {
                    id: 'sAS-sJW',
                    systemA: 'sAS',
                    systemB: 'sJW',
                    distance: 2,
                    enabled: null
                },
                'sAS-sMS': {
                    id: 'sAS-sMS',
                    systemA: 'sAS',
                    systemB: 'sMS',
                    distance: 2,
                    enabled: null
                },
                'sAS-sNH': {
                    id: 'sAS-sNH',
                    systemA: 'sAS',
                    systemB: 'sNH',
                    distance: 3,
                    enabled: null
                },
                'sAS-sPP': {
                    id: 'sAS-sPP',
                    systemA: 'sAS',
                    systemB: 'sPP',
                    distance: 2,
                    enabled: null
                },
                'sAS-sRP': {
                    id: 'sAS-sRP',
                    systemA: 'sAS',
                    systemB: 'sRP',
                    distance: 3,
                    enabled: null
                },
                'sAS-sSG': {
                    id: 'sAS-sSG',
                    systemA: 'sAS',
                    systemB: 'sSG',
                    distance: 1,
                    enabled: null
                },
                'sAS-sSN': {
                    id: 'sAS-sSN',
                    systemA: 'sAS',
                    systemB: 'sSN',
                    distance: 4,
                    enabled: null
                },
                'sAS-sWS': {
                    id: 'sAS-sWS',
                    systemA: 'sAS',
                    systemB: 'sWS',
                    distance: 1,
                    routepoints: [1, 5],
                    enabled: null
                },
                'sAS-sWW': {
                    id: 'sAS-sWW',
                    systemA: 'sAS',
                    systemB: 'sWW',
                    distance: 3,
                    enabled: null
                },
                'sCW-sDW': {
                    id: 'sCW-sDW',
                    systemA: 'sCW',
                    systemB: 'sDW',
                    distance: 2,
                    enabled: null
                },
                'sCW-sGH': {
                    id: 'sCW-sGH',
                    systemA: 'sCW',
                    systemB: 'sGH',
                    distance: 1,
                    enabled: null
                },
                'sCW-sGP': {
                    id: 'sCW-sGP',
                    systemA: 'sCW',
                    systemB: 'sGP',
                    distance: 1,
                    enabled: null
                },
                'sCW-sIB': {
                    id: 'sCW-sIB',
                    systemA: 'sCW',
                    systemB: 'sIB',
                    distance: 2,
                    routepoints: [9, 6],
                    enabled: null
                },
                'sCW-sIM': {
                    id: 'sCW-sIM',
                    systemA: 'sCW',
                    systemB: 'sIM',
                    distance: 4,
                    enabled: null
                },
                'sCW-sIW': {
                    id: 'sCW-sIW',
                    systemA: 'sCW',
                    systemB: 'sIW',
                    distance: 2,
                    routepoints: [2, 11],
                    enabled: null
                },
                'sCW-sJW': {
                    id: 'sCW-sJW',
                    systemA: 'sCW',
                    systemB: 'sJW',
                    distance: 1,
                    routepoints: [6, 8],
                    enabled: null
                },
                'sCW-sMS': {
                    id: 'sCW-sMS',
                    systemA: 'sCW',
                    systemB: 'sMS',
                    distance: 2,
                    enabled: null
                },
                'sCW-sNH': {
                    id: 'sCW-sNH',
                    systemA: 'sCW',
                    systemB: 'sNH',
                    distance: 2,
                    enabled: null
                },
                'sCW-sPP': {
                    id: 'sCW-sPP',
                    systemA: 'sCW',
                    systemB: 'sPP',
                    distance: 4,
                    enabled: null
                },
                'sCW-sRP': {
                    id: 'sCW-sRP',
                    systemA: 'sCW',
                    systemB: 'sRP',
                    distance: 1,
                    routepoints: [6, 5],
                    enabled: null
                },
                'sCW-sSG': {
                    id: 'sCW-sSG',
                    systemA: 'sCW',
                    systemB: 'sSG',
                    distance: 2,
                    enabled: null
                },
                'sCW-sSN': {
                    id: 'sCW-sSN',
                    systemA: 'sCW',
                    systemB: 'sSN',
                    distance: 3,
                    enabled: null
                },
                'sCW-sWS': {
                    id: 'sCW-sWS',
                    systemA: 'sCW',
                    systemB: 'sWS',
                    distance: 3,
                    enabled: null
                },
                'sCW-sWW': {
                    id: 'sCW-sWW',
                    systemA: 'sCW',
                    systemB: 'sWW',
                    distance: 3,
                    enabled: null
                },
                'sDW-sGH': {
                    id: 'sDW-sGH',
                    systemA: 'sDW',
                    systemB: 'sGH',
                    distance: 2,
                    enabled: null
                },
                'sDW-sGP': {
                    id: 'sDW-sGP',
                    systemA: 'sDW',
                    systemB: 'sGP',
                    distance: 3,
                    enabled: null
                },
                'sDW-sIB': {
                    id: 'sDW-sIB',
                    systemA: 'sDW',
                    systemB: 'sIB',
                    distance: 2,
                    enabled: null
                },
                'sDW-sIM': {
                    id: 'sDW-sIM',
                    systemA: 'sDW',
                    systemB: 'sIM',
                    distance: 2,
                    routepoints: [10, 8],
                    enabled: null
                },
                'sDW-sIW': {
                    id: 'sDW-sIW',
                    systemA: 'sDW',
                    systemB: 'sIW',
                    distance: 3,
                    enabled: null
                },
                'sDW-sJW': {
                    id: 'sDW-sJW',
                    systemA: 'sDW',
                    systemB: 'sJW',
                    distance: 2,
                    enabled: null
                },
                'sDW-sMS': {
                    id: 'sDW-sMS',
                    systemA: 'sDW',
                    systemB: 'sMS',
                    distance: 2,
                    enabled: null
                },
                'sDW-sNH': {
                    id: 'sDW-sNH',
                    systemA: 'sDW',
                    systemB: 'sNH',
                    distance: 1,
                    enabled: null
                },
                'sDW-sPP': {
                    id: 'sDW-sPP',
                    systemA: 'sDW',
                    systemB: 'sPP',
                    distance: 2,
                    enabled: null
                },
                'sDW-sRP': {
                    id: 'sDW-sRP',
                    systemA: 'sDW',
                    systemB: 'sRP',
                    distance: 1,
                    routepoints: [8, 9],
                    enabled: null
                },
                'sDW-sSG': {
                    id: 'sDW-sSG',
                    systemA: 'sDW',
                    systemB: 'sSG',
                    distance: 3,
                    enabled: null
                },
                'sDW-sSN': {
                    id: 'sDW-sSN',
                    systemA: 'sDW',
                    systemB: 'sSN',
                    distance: 1,
                    enabled: null
                },
                'sDW-sWS': {
                    id: 'sDW-sWS',
                    systemA: 'sDW',
                    systemB: 'sWS',
                    distance: 3,
                    enabled: null
                },
                'sDW-sWW': {
                    id: 'sDW-sWW',
                    systemA: 'sDW',
                    systemB: 'sWW',
                    distance: 1,
                    enabled: null
                },
                'sGH-sGP': {
                    id: 'sGH-sGP',
                    systemA: 'sGH',
                    systemB: 'sGP',
                    distance: 2,
                    enabled: null
                },
                'sGH-sIB': {
                    id: 'sGH-sIB',
                    systemA: 'sGH',
                    systemB: 'sIB',
                    distance: 1,
                    enabled: null
                },
                'sGH-sIM': {
                    id: 'sGH-sIM',
                    systemA: 'sGH',
                    systemB: 'sIM',
                    distance: 3,
                    enabled: null
                },
                'sGH-sIW': {
                    id: 'sGH-sIW',
                    systemA: 'sGH',
                    systemB: 'sIW',
                    distance: 4,
                    enabled: null
                },
                'sGH-sJW': {
                    id: 'sGH-sJW',
                    systemA: 'sGH',
                    systemB: 'sJW',
                    distance: 3,
                    enabled: null
                },
                'sGH-sMS': {
                    id: 'sGH-sMS',
                    systemA: 'sGH',
                    systemB: 'sMS',
                    distance: 2,
                    enabled: null
                },
                'sGH-sNH': {
                    id: 'sGH-sNH',
                    systemA: 'sGH',
                    systemB: 'sNH',
                    distance: 1,
                    enabled: null
                },
                'sGH-sPP': {
                    id: 'sGH-sPP',
                    systemA: 'sGH',
                    systemB: 'sPP',
                    distance: 3,
                    enabled: null
                },
                'sGH-sRP': {
                    id: 'sGH-sRP',
                    systemA: 'sGH',
                    systemB: 'sRP',
                    distance: 2,
                    enabled: null
                },
                'sGH-sSG': {
                    id: 'sGH-sSG',
                    systemA: 'sGH',
                    systemB: 'sSG',
                    distance: 3,
                    enabled: null
                },
                'sGH-sSN': {
                    id: 'sGH-sSN',
                    systemA: 'sGH',
                    systemB: 'sSN',
                    distance: 3,
                    enabled: null
                },
                'sGH-sWS': {
                    id: 'sGH-sWS',
                    systemA: 'sGH',
                    systemB: 'sWS',
                    distance: 3,
                    enabled: null
                },
                'sGH-sWW': {
                    id: 'sGH-sWW',
                    systemA: 'sGH',
                    systemB: 'sWW',
                    distance: 2,
                    enabled: null
                },
                'sGP-sIB': {
                    id: 'sGP-sIB',
                    systemA: 'sGP',
                    systemB: 'sIB',
                    distance: 3,
                    enabled: null
                },
                'sGP-sIM': {
                    id: 'sGP-sIM',
                    systemA: 'sGP',
                    systemB: 'sIM',
                    distance: 3,
                    enabled: null
                },
                'sGP-sIW': {
                    id: 'sGP-sIW',
                    systemA: 'sGP',
                    systemB: 'sIW',
                    distance: 3,
                    enabled: null
                },
                'sGP-sJW': {
                    id: 'sGP-sJW',
                    systemA: 'sGP',
                    systemB: 'sJW',
                    distance: 2,
                    enabled: null
                },
                'sGP-sMS': {
                    id: 'sGP-sMS',
                    systemA: 'sGP',
                    systemB: 'sMS',
                    distance: 1,
                    enabled: null
                },
                'sGP-sNH': {
                    id: 'sGP-sNH',
                    systemA: 'sGP',
                    systemB: 'sNH',
                    distance: 2,
                    enabled: null
                },
                'sGP-sPP': {
                    id: 'sGP-sPP',
                    systemA: 'sGP',
                    systemB: 'sPP',
                    distance: 3,
                    enabled: null
                },
                'sGP-sRP': {
                    id: 'sGP-sRP',
                    systemA: 'sGP',
                    systemB: 'sRP',
                    distance: 3,
                    enabled: null
                },
                'sGP-sSG': {
                    id: 'sGP-sSG',
                    systemA: 'sGP',
                    systemB: 'sSG',
                    distance: 1,
                    enabled: null
                },
                'sGP-sSN': {
                    id: 'sGP-sSN',
                    systemA: 'sGP',
                    systemB: 'sSN',
                    distance: 3,
                    enabled: null
                },
                'sGP-sWS': {
                    id: 'sGP-sWS',
                    systemA: 'sGP',
                    systemB: 'sWS',
                    distance: 2,
                    enabled: null
                },
                'sGP-sWW': {
                    id: 'sGP-sWW',
                    systemA: 'sGP',
                    systemB: 'sWW',
                    distance: 2,
                    enabled: null
                },
                'sIB-sIM': {
                    id: 'sIB-sIM',
                    systemA: 'sIB',
                    systemB: 'sIM',
                    distance: 3,
                    enabled: null
                },
                'sIB-sIW': {
                    id: 'sIB-sIW',
                    systemA: 'sIB',
                    systemB: 'sIW',
                    distance: 3,
                    enabled: null
                },
                'sIB-sJW': {
                    id: 'sIB-sJW',
                    systemA: 'sIB',
                    systemB: 'sJW',
                    distance: 2,
                    enabled: null
                },
                'sIB-sMS': {
                    id: 'sIB-sMS',
                    systemA: 'sIB',
                    systemB: 'sMS',
                    distance: 2,
                    enabled: null
                },
                'sIB-sNH': {
                    id: 'sIB-sNH',
                    systemA: 'sIB',
                    systemB: 'sNH',
                    distance: 1,
                    enabled: null
                },
                'sIB-sPP': {
                    id: 'sIB-sPP',
                    systemA: 'sIB',
                    systemB: 'sPP',
                    distance: 3,
                    enabled: null
                },
                'sIB-sRP': {
                    id: 'sIB-sRP',
                    systemA: 'sIB',
                    systemB: 'sRP',
                    distance: 1,
                    enabled: null
                },
                'sIB-sSG': {
                    id: 'sIB-sSG',
                    systemA: 'sIB',
                    systemB: 'sSG',
                    distance: 3,
                    enabled: null
                },
                'sIB-sSN': {
                    id: 'sIB-sSN',
                    systemA: 'sIB',
                    systemB: 'sSN',
                    distance: 3,
                    enabled: null
                },
                'sIB-sWS': {
                    id: 'sIB-sWS',
                    systemA: 'sIB',
                    systemB: 'sWS',
                    distance: 3,
                    enabled: null
                },
                'sIB-sWW': {
                    id: 'sIB-sWW',
                    systemA: 'sIB',
                    systemB: 'sWW',
                    distance: 2,
                    enabled: null
                },
                'sIM-sIW': {
                    id: 'sIM-sIW',
                    systemA: 'sIM',
                    systemB: 'sIW',
                    distance: 4,
                    enabled: null
                },
                'sIM-sJW': {
                    id: 'sIM-sJW',
                    systemA: 'sIM',
                    systemB: 'sJW',
                    distance: 4,
                    enabled: null
                },
                'sIM-sMS': {
                    id: 'sIM-sMS',
                    systemA: 'sIM',
                    systemB: 'sMS',
                    distance: 2,
                    enabled: null
                },
                'sIM-sNH': {
                    id: 'sIM-sNH',
                    systemA: 'sIM',
                    systemB: 'sNH',
                    distance: 2,
                    enabled: null
                },
                'sIM-sPP': {
                    id: 'sIM-sPP',
                    systemA: 'sIM',
                    systemB: 'sPP',
                    distance: 1,
                    routepoints: [2, 9],
                    enabled: null
                },
                'sIM-sRP': {
                    id: 'sIM-sRP',
                    systemA: 'sIM',
                    systemB: 'sRP',
                    distance: 3,
                    enabled: null
                },
                'sIM-sSG': {
                    id: 'sIM-sSG',
                    systemA: 'sIM',
                    systemB: 'sSG',
                    distance: 4,
                    enabled: null
                },
                'sIM-sSN': {
                    id: 'sIM-sSN',
                    systemA: 'sIM',
                    systemB: 'sSN',
                    distance: 1,
                    enabled: null
                },
                'sIM-sWS': {
                    id: 'sIM-sWS',
                    systemA: 'sIM',
                    systemB: 'sWS',
                    distance: 2,
                    routepoints: [12, 12],
                    enabled: null
                },
                'sIM-sWW': {
                    id: 'sIM-sWW',
                    systemA: 'sIM',
                    systemB: 'sWW',
                    distance: 1,
                    enabled: null
                },
                'sIW-sJW': {
                    id: 'sIW-sJW',
                    systemA: 'sIW',
                    systemB: 'sJW',
                    distance: 1,
                    routepoints: [6, 5],
                    enabled: null
                },
                'sIW-sMS': {
                    id: 'sIW-sMS',
                    systemA: 'sIW',
                    systemB: 'sMS',
                    distance: 3,
                    enabled: null
                },
                'sIW-sNH': {
                    id: 'sIW-sNH',
                    systemA: 'sIW',
                    systemB: 'sNH',
                    distance: 4,
                    enabled: null
                },
                'sIW-sPP': {
                    id: 'sIW-sPP',
                    systemA: 'sIW',
                    systemB: 'sPP',
                    distance: 3,
                    enabled: null
                },
                'sIW-sRP': {
                    id: 'sIW-sRP',
                    systemA: 'sIW',
                    systemB: 'sRP',
                    distance: 2,
                    enabled: null
                },
                'sIW-sSG': {
                    id: 'sIW-sSG',
                    systemA: 'sIW',
                    systemB: 'sSG',
                    distance: 2,
                    enabled: null
                },
                'sIW-sSN': {
                    id: 'sIW-sSN',
                    systemA: 'sIW',
                    systemB: 'sSN',
                    distance: 4,
                    enabled: null
                },
                'sIW-sWS': {
                    id: 'sIW-sWS',
                    systemA: 'sIW',
                    systemB: 'sWS',
                    distance: 2,
                    routepoints: [1, 4],
                    enabled: null
                },
                'sIW-sWW': {
                    id: 'sIW-sWW',
                    systemA: 'sIW',
                    systemB: 'sWW',
                    distance: 4,
                    enabled: null
                },
                'sJW-sMS': {
                    id: 'sJW-sMS',
                    systemA: 'sJW',
                    systemB: 'sMS',
                    distance: 3,
                    enabled: null
                },
                'sJW-sNH': {
                    id: 'sJW-sNH',
                    systemA: 'sJW',
                    systemB: 'sNH',
                    distance: 3,
                    enabled: null
                },
                'sJW-sPP': {
                    id: 'sJW-sPP',
                    systemA: 'sJW',
                    systemB: 'sPP',
                    distance: 4,
                    enabled: null
                },
                'sJW-sRP': {
                    id: 'sJW-sRP',
                    systemA: 'sJW',
                    systemB: 'sRP',
                    distance: 1,
                    routepoints: [7, 6],
                    enabled: null
                },
                'sJW-sSG': {
                    id: 'sJW-sSG',
                    systemA: 'sJW',
                    systemB: 'sSG',
                    distance: 1,
                    enabled: null
                },
                'sJW-sSN': {
                    id: 'sJW-sSN',
                    systemA: 'sJW',
                    systemB: 'sSN',
                    distance: 3,
                    enabled: null
                },
                'sJW-sWS': {
                    id: 'sJW-sWS',
                    systemA: 'sJW',
                    systemB: 'sWS',
                    distance: 3,
                    enabled: null
                },
                'sJW-sWW': {
                    id: 'sJW-sWW',
                    systemA: 'sJW',
                    systemB: 'sWW',
                    distance: 3,
                    enabled: null
                },
                'sMS-sNH': {
                    id: 'sMS-sNH',
                    systemA: 'sMS',
                    systemB: 'sNH',
                    distance: 1,
                    enabled: null
                },
                'sMS-sPP': {
                    id: 'sMS-sPP',
                    systemA: 'sMS',
                    systemB: 'sPP',
                    distance: 2,
                    enabled: null
                },
                'sMS-sRP': {
                    id: 'sMS-sRP',
                    systemA: 'sMS',
                    systemB: 'sRP',
                    distance: 3,
                    enabled: null
                },
                'sMS-sSG': {
                    id: 'sMS-sSG',
                    systemA: 'sMS',
                    systemB: 'sSG',
                    distance: 2,
                    enabled: null
                },
                'sMS-sSN': {
                    id: 'sMS-sSN',
                    systemA: 'sMS',
                    systemB: 'sSN',
                    distance: 2,
                    enabled: null
                },
                'sMS-sWS': {
                    id: 'sMS-sWS',
                    systemA: 'sMS',
                    systemB: 'sWS',
                    distance: 1,
                    enabled: null
                },
                'sMS-sWW': {
                    id: 'sMS-sWW',
                    systemA: 'sMS',
                    systemB: 'sWW',
                    distance: 1,
                    enabled: null
                },
                'sNH-sPP': {
                    id: 'sNH-sPP',
                    systemA: 'sNH',
                    systemB: 'sPP',
                    distance: 2,
                    enabled: null
                },
                'sNH-sRP': {
                    id: 'sNH-sRP',
                    systemA: 'sNH',
                    systemB: 'sRP',
                    distance: 2,
                    enabled: null
                },
                'sNH-sSG': {
                    id: 'sNH-sSG',
                    systemA: 'sNH',
                    systemB: 'sSG',
                    distance: 3,
                    enabled: null
                },
                'sNH-sSN': {
                    id: 'sNH-sSN',
                    systemA: 'sNH',
                    systemB: 'sSN',
                    distance: 2,
                    enabled: null
                },
                'sNH-sWS': {
                    id: 'sNH-sWS',
                    systemA: 'sNH',
                    systemB: 'sWS',
                    distance: 2,
                    enabled: null
                },
                'sNH-sWW': {
                    id: 'sNH-sWW',
                    systemA: 'sNH',
                    systemB: 'sWW',
                    distance: 1,
                    enabled: null
                },
                'sPP-sRP': {
                    id: 'sPP-sRP',
                    systemA: 'sPP',
                    systemB: 'sRP',
                    distance: 3,
                    enabled: null
                },
                'sPP-sSG': {
                    id: 'sPP-sSG',
                    systemA: 'sPP',
                    systemB: 'sSG',
                    distance: 3,
                    enabled: null
                },
                'sPP-sSN': {
                    id: 'sPP-sSN',
                    systemA: 'sPP',
                    systemB: 'sSN',
                    distance: 2,
                    enabled: null
                },
                'sPP-sWS': {
                    id: 'sPP-sWS',
                    systemA: 'sPP',
                    systemB: 'sWS',
                    distance: 1,
                    enabled: null
                },
                'sPP-sWW': {
                    id: 'sPP-sWW',
                    systemA: 'sPP',
                    systemB: 'sWW',
                    distance: 1,
                    enabled: null
                },
                'sRP-sSG': {
                    id: 'sRP-sSG',
                    systemA: 'sRP',
                    systemB: 'sSG',
                    distance: 2,
                    enabled: null
                },
                'sRP-sSN': {
                    id: 'sRP-sSN',
                    systemA: 'sRP',
                    systemB: 'sSN',
                    distance: 2,
                    enabled: null
                },
                'sRP-sWS': {
                    id: 'sRP-sWS',
                    systemA: 'sRP',
                    systemB: 'sWS',
                    distance: 4,
                    enabled: null
                },
                'sRP-sWW': {
                    id: 'sRP-sWW',
                    systemA: 'sRP',
                    systemB: 'sWW',
                    distance: 2,
                    enabled: null
                },
                'sSG-sSN': {
                    id: 'sSG-sSN',
                    systemA: 'sSG',
                    systemB: 'sSN',
                    distance: 4,
                    enabled: null
                },
                'sSG-sWS': {
                    id: 'sSG-sWS',
                    systemA: 'sSG',
                    systemB: 'sWS',
                    distance: 2,
                    enabled: null
                },
                'sSG-sWW': {
                    id: 'sSG-sWW',
                    systemA: 'sSG',
                    systemB: 'sWW',
                    distance: 3,
                    enabled: null
                },
                'sSN-sWS': {
                    id: 'sSN-sWS',
                    systemA: 'sSN',
                    systemB: 'sWS',
                    distance: 3,
                    enabled: null
                },
                'sSN-sWW': {
                    id: 'sSN-sWW',
                    systemA: 'sSN',
                    systemB: 'sWW',
                    distance: 1,
                    enabled: null
                },
                'sWS-sWW': {
                    id: 'sWS-sWW',
                    systemA: 'sWS',
                    systemB: 'sWW',
                    distance: 2,
                    enabled: null
                }
            },
            GAME = {
                showRouteBuy: true,
                showRouteSell: true,
                showRouteNet: true,
                showRouteBlackMarket: false,
                maxRouteDistance: 2,
                enableFairs: false,
                enableDemands: false,
                showNamesSystems: false,
                showNamesRaces: false
            },
            RACE_BUYERS = {
                // see gameSetup()
                // seller: buyer: true
            },
            FONTHEIGHT_FULL = 12,
            FONTHEIGHT_HALF = 5,
            ROUTEPOINT_COUNT = 12,
            ROUTEPOINT_DISTANCE = 55,
            ROUTEPOINT_ANGLE;


        // fisher-yates
        // http://stackoverflow.com/questions/2450954/how-to-randomize-a-javascript-array
        function arrayShuffle(myArray) {
            var i = myArray.length, j, tempi, tempj;
            if ( i == 0 ) return false;
            while ( --i ) {
                j = Math.floor( Math.random() * ( i + 1 ) );
                tempi = myArray[i];
                tempj = myArray[j];
                myArray[i] = tempj;
                myArray[j] = tempi;
            }
            return myArray;
        }


        function objectEach(obj, cb) {
            Object.keys(obj).forEach(function(key) {
                cb(key, obj[key]);
            });
        }


        function domClassAdd(node, addC) {
            var cls;
            if (('object' === typeof node.classList) && ('function' === typeof node.classList.add)) {
                node.classList.add(addC);
            } else {
                cls = node.getAttribute('class') || '';
                cls = cls.split(' ');
                cls.push(addC);
                node.setAttribute('class', cls.join(' '));
            }
        }


        function domClassRemove(node, rmC) {
            var oldCls,
                newCls = [];
            if (('object' === typeof node.classList) && ('function' === typeof node.classList.remove)) {
                node.classList.remove(rmC);
            } else {
                oldCls = node.getAttribute('class') || '';
                oldCls = oldCls.split(' ');
                oldCls.forEach(function(haveC) {
                    if (haveC !== rmC) {
                        newCls.push(haveC);
                    }
                });
                node.setAttribute('class', newCls.join(' '));
            }
        }


        function angleInvert(angle) {
            return (angle + 180) % 360;
        }


        function angleRoutepoint(angle) {
            var rp = Math.round(angle / ROUTEPOINT_ANGLE);
            return routepointWrap(rp);
        }


        // returns [x,y]
        function systemRoutepointGet(system, rp) {
            var radians = ROUTEPOINT_ANGLE * rp * Math.PI / 180;
            var rpXY = system.uiCenter.slice();
            rpXY[0] += Math.round(ROUTEPOINT_DISTANCE * Math.cos(radians));
            rpXY[1] += Math.round(ROUTEPOINT_DISTANCE * Math.sin(radians));
            return rpXY;
        }


        function thumbIconSet(oldThumb, iconID) {
            // This is the only way I've found that works on Chrome.
            var newThumb = oldThumb.cloneNode(true);
            newThumb.setAttributeNS(NS.xlink, 'href', '#icon-' + iconID);
            oldThumb.parentElement.replaceChild(newThumb, oldThumb);
        }


        // we need to be able to loop around
        function routepointWrap(rp) {
            // Modulus on a negative number gives us a negative number,
            // so we shift it higher so that it's always positive to start.
            return (rp + ROUTEPOINT_COUNT) % ROUTEPOINT_COUNT;
        }


        // calculates the alignment for a textbox at the routepoint
        // returns [class, x, y]
        //      class is a class name to add
        //      x is an x-coordinate adjustment
        //      y is a y-coordinate adjustment
        function routepointTextAlign(rp) {
            var align = ['', 0, 0],
                angle;
            rp = rp % ROUTEPOINT_COUNT;
            angle = rp * ROUTEPOINT_ANGLE;
            if (angle === 0) {
                align[1] += -1;
                align[2] += FONTHEIGHT_HALF;
            } else if (angle < 180) {
                align[2] += -1;
            } else if (angle === 180) {
                align[1] += 1;
                align[2] += FONTHEIGHT_HALF;
            } else {
                align[2] += FONTHEIGHT_FULL + 1;
            }
            angle = (angle + 90) % 360;
            if (angle === 0) {
                align[0] = 'middle';
            } else if (angle < 180) {
                align[0] = 'right';
                align[1] += -1;
            } else if (angle === 180) {
                align[0] = 'middle';
            } else {
                align[0] = 'left';
                align[1] += 1;
            }
            return align;
        }


        // detect and handle collisions at routepoints
        // routepoints is routepoint: routeID: isSource
        function routepointsDistribute(systemID, routepoints) {
            var collision,
                iterations = 0,
                runs,
                currentRun,
                rp;

            do {
                // find "runs" of contiguous routepoints
                runs = [];
                currentRun = [];
                for (rp = 0; rp < ROUTEPOINT_COUNT; rp += 1) {
                    if (routepoints[rp]) {
                        currentRun.push(rp);
                    } else if (currentRun.length) {
                        runs.push(currentRun);
                        currentRun = [];
                    }
                }
                // if we wrap around
                if (currentRun.length) {
                    if (routepoints[0] && runs[0]) {
                        // merge with first run
                        Array.prototype.push.apply(runs[0], currentRun);
                    } else {
                        runs.push(currentRun);
                    }
                }

                collision = false;
                runs.forEach(function(run) {
                    var rp_count,
                        route_count,
                        routeIDs,
                        routeDetails,
                        rp_center,
                        rp_start,
                        i,
                        newRP,
                        routeID,
                        route,
                        details;

                    rp_count = 0;
                    route_count = 0;
                    run.forEach(function(rp) {
                        rp_count += 1;
                        route_count += Object.keys(routepoints[rp]).length;
                    });

                    // collision (detected with pigeonhole rule)
                    if (route_count > rp_count) {
                        collision = true;
                        routeIDs = [];
                        routeDetails = {};
                        run.forEach(function(rp) {
                            objectEach(routepoints[rp], function(routeID) {
                                routeIDs.push(routeID);
                                routeDetails[routeID] = {
                                    oldRP: rp,
                                    isSource: routepoints[rp][routeID]
                                };
                                if (routepoints[rp][routeID]) {
                                    routeDetails[routeID].angle = ROUTES[routeID].enabled.srcAngle;
                                } else {
                                    routeDetails[routeID].angle = ROUTES[routeID].enabled.dstAngle;
                                }
                            });
                        });

                        // Sort by angle, which is tricky because they wrap around.
                        // What we're doing below isn't that great, but works well enough
                        // as long as we don't get jammed up with a huge run.
                        routeIDs.sort(function(aID, bID) {
                            var aDetails = routeDetails[aID],
                                bDetails = routeDetails[bID];
                            if (aDetails.angle < (3*ROUTEPOINT_ANGLE) &&
                                bDetails.angle >= (360 - (3*ROUTEPOINT_ANGLE))) {
                                return 1;
                            }
                            if (bDetails.angle < ROUTEPOINT_ANGLE &&
                                aDetails.angle >= (360 - ROUTEPOINT_ANGLE)) {
                                return -1;
                            }
                            return aDetails.angle - bDetails.angle;
                        });

                        rp_center = run[Math.floor(run.length/2)];
                        rp_start = rp_center - Math.floor(route_count / 2);
                        rp_start = routepointWrap(rp_start);
                        for (i = 0; i < route_count; i += 1) {
                            newRP = routepointWrap(rp_start + i);
                            routeID = routeIDs.shift();
                            route = ROUTES[routeID];
                            details = routeDetails[routeID];

                            // move routepoint
                            delete routepoints[details.oldRP][routeID];
                            routepoints[newRP] = routepoints[newRP] || {};
                            routepoints[newRP][routeID] = details.isSource;
                            if (details.isSource) {
                                route.enabled.srcRoutepoint = newRP;
                            } else {
                                route.enabled.dstRoutepoint = newRP;
                            }
                        }
                    }
                });

                iterations += 1;
            } while(collision && (iterations < ROUTEPOINT_COUNT));
        }


        // returns degrees
        function routeAngle(src, dst) {
            var y = dst[1] - src[1],
                x = dst[0] - src[0],
                angle = Math.atan2(y, x) * 180 / Math.PI;
            if (angle < 0) {
                angle += 360;
            }
            return Math.round(angle);
        }


        function routesCalculate() {
            var systemRoutes = {};  // systemID: routeID: route

            // calculate which routes should be shown
            objectEach(ROUTES, function(routeID, route) {
                var systemA = SYSTEMS[route.systemA],
                    systemB = SYSTEMS[route.systemB];

                // assume doom
                route.enabled = null;

                if (systemA.raceID && systemB.raceID) {
                    if (RACE_BUYERS[systemA.raceID] && RACE_BUYERS[systemA.raceID][systemB.raceID]) {
                        route.enabled = {
                            srcSystemID: systemA.id,
                            dstSystemID: systemB.id,
                            srcRaceID: systemA.raceID,
                            dstRaceID: systemB.raceID,
                            srcAngle: routeAngle(systemA.uiCenter, systemB.uiCenter)
                        };
                        route.enabled.dstAngle = angleInvert(route.enabled.srcAngle);
                        if (route.routepoints) {
                            route.enabled.srcRoutepoint = route.routepoints[0];
                            route.enabled.dstRoutepoint = route.routepoints[1];
                        }
                    } else if (RACE_BUYERS[systemB.raceID] && RACE_BUYERS[systemB.raceID][systemA.raceID]) {
                        route.enabled = {
                            srcSystemID: systemB.id,
                            dstSystemID: systemA.id,
                            srcRaceID: systemB.raceID,
                            dstRaceID: systemA.raceID,
                            srcAngle: routeAngle(systemB.uiCenter, systemA.uiCenter)
                        };
                        route.enabled.dstAngle = angleInvert(route.enabled.srcAngle);
                        if (route.routepoints) {
                            route.enabled.srcRoutepoint = route.routepoints[1];
                            route.enabled.dstRoutepoint = route.routepoints[0];
                        }
                    }
                    if (route.distance > GAME.maxRouteDistance) {
                        route.enabled = null;
                    }
                    if (route.enabled) {
                        systemRoutes[route.enabled.srcSystemID] = systemRoutes[route.enabled.srcSystemID] || {};
                        systemRoutes[route.enabled.srcSystemID][route.id] = route;
                        systemRoutes[route.enabled.dstSystemID] = systemRoutes[route.enabled.dstSystemID] || {};
                        systemRoutes[route.enabled.dstSystemID][route.id] = route;
                    }
                }
            });

            // calculate route points
            objectEach(systemRoutes, function(systemID, routes) {
                var system = SYSTEMS[systemID],
                    routepoints = {};   // see routepointsDistribute()
                objectEach(routes, function(routeID, route) {
                    var routepoint;
                    if (systemID === route.enabled.srcSystemID) {
                        if (route.enabled.srcRoutepoint) {
                            routepoint = route.enabled.srcRoutepoint;
                        } else {
                            routepoint = angleRoutepoint(route.enabled.srcAngle);
                            route.enabled.srcRoutepoint = routepoint;
                        }
                        routepoints[routepoint] = routepoints[routepoint] || {};
                        routepoints[routepoint][route.id] = true;
                    } else {
                        if (route.enabled.dstRoutepoint) {
                            routepoint = route.enabled.dstRoutepoint;
                        } else {
                            routepoint = angleRoutepoint(route.enabled.dstAngle);
                            route.enabled.dstRoutepoint = routepoint;
                        }
                        routepoints[routepoint] = routepoints[routepoint] || {};
                        routepoints[routepoint][route.id] = false;
                    }
                });
                routepointsDistribute(systemID, routepoints);
            });

            // update the UI
            var routesUI = document.getElementById('routes');
            objectEach(ROUTES, function(routeID, route) {
                var routeUI = document.getElementById(routeID),
                    pathUI,
                    srcUI,
                    dstUI,
                    srcSystem,
                    dstSystem,
                    srcRPXY,
                    dstRPXY,
                    good,
                    srcAlign,
                    dstAlign;

                // delete, so that we can redraw (if necessary)
                if (routeUI) {
                    routesUI.removeChild(routeUI);
                }

                // draw
                if (route.enabled) {
                    srcSystem = SYSTEMS[route.enabled.srcSystemID];
                    dstSystem = SYSTEMS[route.enabled.dstSystemID];
                    srcRPXY = systemRoutepointGet(srcSystem, route.enabled.srcRoutepoint);
                    dstRPXY = systemRoutepointGet(dstSystem, route.enabled.dstRoutepoint);
                    good = RACES[route.enabled.srcRaceID].good;

                    routeUI = document.createElementNS(NS.svg, 'g');
                    routeUI.setAttribute('id', route.id);
                    routeUI.setAttribute('class', 'route');

                    pathUI = document.createElementNS(NS.svg, 'path');
                    pathUI.setAttribute('class', 'path');
                    pathUI.setAttribute('d', 'M ' + [
                            srcRPXY[0], srcRPXY[1],
                            dstRPXY[0], dstRPXY[1]
                        ].join(' '));
                    pathUI.setAttribute('marker-end', 'url(#arrowhead)');
                    routeUI.appendChild(pathUI);

                    srcAlign = routepointTextAlign(route.enabled.srcRoutepoint);
                    srcUI = document.createElementNS(NS.svg, 'text');
                    srcUI.setAttribute('class', 'src ' + srcAlign[0]);
                    srcUI.setAttribute('x', srcRPXY[0] + srcAlign[1]);
                    srcUI.setAttribute('y', srcRPXY[1] + srcAlign[2]);
                    srcUI.textContent = good.buy;
                    routeUI.appendChild(srcUI);

                    dstAlign = routepointTextAlign(route.enabled.dstRoutepoint);
                    dstUI = document.createElementNS(NS.svg, 'text');
                    dstUI.setAttribute('class', 'dst ' + dstAlign[0]);
                    dstUI.setAttribute('x', dstRPXY[0] + dstAlign[1]);
                    dstUI.setAttribute('y', dstRPXY[1] + dstAlign[2]);
                    dstUI.textContent = good.sell;
                    routeUI.appendChild(dstUI);

                    routesUI.appendChild(routeUI);
                }
            });
        }


        // displays race chooser popup
        // calls callback with chosen race
        function systemPopupOpen(systemID, races) {
            var popupUI = document.documentElement.getElementById('popupSystem'),
                raceUI,
                raceUIs = {};

            // disable all race icons (except rUN)
            objectEach(RACES, function(raceID, race) {
                raceUI = popupUI.getElementsByClassName(raceID)[0];
                raceUIs[raceID] = raceUI;
                raceUI.onclick = function(evt) {
                    evt.stopPropagation();
                    evt.preventDefault();
                };
                domClassAdd(raceUI, 'disabled');
            });

            // enable available race icons
            races.forEach(function(raceID) {
                raceUI = raceUIs[raceID];
                domClassRemove(raceUI, 'disabled');
                raceUI.onclick = function() {
                    popupUI.style.display = 'none';
                    systemRaceSet(systemID, raceID);
                };
            });

            // unknown race
            raceUI = popupUI.getElementsByClassName('rUN')[0];
            raceUI.onclick = function() {
                popupUI.style.display = 'none';
                systemRaceSet(systemID, null);
            };

            popupUI.style.display = 'inline';
            popupUI.onclick = function() {
                popupUI.style.display = 'none';
            };
        }


        function systemRaceSet(systemID, raceID) {
            var system = SYSTEMS[systemID],
                race,
                systemUI,
                thumbUI,
                raceUI;

            // unset old race
            race = RACES[system.raceID];
            if (race) {
                race.systemID = null;
            }

            system.raceID = raceID;
            if (raceID) {
                race = RACES[raceID];
                race.systemID = systemID;
            }
            systemUI = document.documentElement.getElementById(systemID);
            thumbUI = systemUI.getElementsByClassName('thumb')[0];
            thumbIconSet(thumbUI, raceID || 'rUN');
            raceUI = systemUI.getElementsByClassName('race')[0];
            raceUI.textContent = raceID ? race.name : '';

            routesCalculate();
        }


        // handles system thumbnail click
        function systemThumbClick(systemID) {
            var system,
                raceID,
                races = [];

            system = SYSTEMS[systemID];
            raceID = system.raceID;
            if (raceID) {
                races.push(raceID);
            }
            objectEach(RACES, function(raceID, race) {
                if (! race.systemID) {
                    races.push(raceID);
                }
            });
            systemPopupOpen(systemID, races);
        }


        function gameSetup() {
            // This needs to be calculated everytime the game popup is saved because
            // setting the black market can affect who can sell to whom.
            RACE_BUYERS = {};
            objectEach(RACES, function(sellerID, seller) {
                var r, rr;
                RACE_BUYERS[sellerID] = {};
                // FUTURE:  consider black market
                for (r = 1; r <= seller.good.sellAtNext; r += 1) {
                    rr = seller.number + r;
                    rr = rr % 14;
                    if (rr === 0) {
                        rr = 14;
                    }
                    rr = (rr < 10) ? 'r0' + rr : 'r' + rr;
                    RACE_BUYERS[sellerID][rr] = true;
                }
            });
        }


        function gameChoose(gameID) {
            if ('random' === gameID) {
                var systemIDs = arrayShuffle(Object.keys(SYSTEMS));
                console.log(JSON.stringify(systemIDs));
                var raceIDs = Object.keys(RACES);
                systemIDs.forEach(function(systemID) {
                    if (SYSTEMS[systemID].hazard) {
                        return;
                    }
                    if ('sGH' === systemID) {
                        return;
                    }
                    var raceID = raceIDs.shift();
                    systemRaceSet(systemID, raceID);
                });
            }
        }


        function mapSetup() {
            ROUTEPOINT_ANGLE = 360 / ROUTEPOINT_COUNT;
        }


        window.onload = function() {
            mapSetup();
            gameSetup();
            gameChoose(window.location.hash.substring(1));
        };
    ]]></script>


    <rect id="background" class="background" x="0" y="0" width="1200" height="800" />

    <g id="map">
        <path class="path" d="M 146,35 C 260,14 315,26 369,86" />
        <path class="path" d="M 229,108 c 77,-61 96,-32 81,47" />
        <path class="path" d="M 109,209 c -132,157 -59,227 13,249" />
        <path class="path" d="M 352,337 c 24,32 48,64 71,105" />
        <path class="path" d="M 284,354 c 113,24 11,149 131,102" />
        <path class="path" d="M 202,429 c 100,75 212,85 333,53" />
        <path class="path" d="M 234,543 c 30,-30 60,-17 90,35" />
        <path class="path" d="M 382,548 c 39,-28 84,-21 131,2" />
        <path class="path" d="M 86,598 c -74,23 -62,177 12,109" />
        <path class="path" d="M 403,610 C 521,590 517,641 441,734" />
        <path class="path" d="M 295,724 c 184,-165 -43,152 146,10" />
        <path class="path" d="M 585,54 C 619,37 652,36 683,63" />
        <path class="path" d="M 735,117 C 702,128 679,145 685,176" />
        <path class="path" d="M 581,130 c 29,12 59,24 0,56" />
        <path class="path" d="M 548,264 C 544,225 530,178 581,185" />
        <path class="path" d="M 669,246 C 640,217 610,198 581,184" />
        <path class="path" d="M 430,230 c 33,8 57,25 63,61" />
        <path class="path" d="M 679,560 c 98,-44 99,61 217,13" />
        <path class="path" d="M 642,390 c 78,2 156,7 236,43" />
        <path class="path" d="M 797,291 c 55,35 73,85 81,141" />
        <path class="path" d="M 794,57 C 830,30 879,11 985,27" />
        <path class="path" d="M 1059,157 c 28,48 30,94 -14,138" />
        <path class="path" d="M 971,152 c -1,35 -10,60 -39,65" />
        <path class="path" d="M 858,185 c 18,0 39,4 75,32" />
        <path class="path" d="M 970,318 C 971,281 960,246 931,216" />
        <path class="path" d="M 895,572 c 20,31 54,48 94,60" />
        <path class="path" d="M 1056,448 c -107,142 131,75 41,188" />
        <path class="path" d="M 878,732 c 26,27 62,43 130,27" />
        <path class="path" d="M 433,442 c 5,-22 19,-40 52,-60" />
        <path class="path" d="M 92,392 l -37,24" />

        <g id="sAS" class="system" >
            <text class="name" x="736" y="765">Asteroid System</text>
            <text class="name race" x="736" y="601"></text>
            <path class="boundary" d="m 440,734 c 54,0 172,-72 172,-72 0,0 70,-75 117,-77 60,0 161,83 161,83 0,0 -12,64 -12,64 -69,64 -279,32 -279,32 0,0 -99,31 -159,-30 z" />
            <use class="thumb" x="720" y="670" width="30" height="30" xlink:href="#icon-rUN" onclick="systemThumbClick('sAS');" />
        </g>
        <g id="sCW" class="system" >
            <text class="name" x="181" y="423">Colony World</text>
            <text class="name race" x="181" y="288"></text>
            <ellipse class="boundary" cx="181" cy="353" rx="103" ry="78" />
            <use class="thumb" x="166" y="338" width="30" height="30" xlink:href="#icon-rUN" onclick="systemThumbClick('sCW');" />
        </g>
        <g id="sDW" class="system" >
            <text class="name" x="484" y="157">Desert World</text>
            <text class="name race" x="484" y="28"></text>
            <ellipse class="boundary" cx="484" cy="90" rx="115" ry="75" />
            <use class="thumb" x="469" y="75" width="30" height="30" xlink:href="#icon-rUN" onclick="systemThumbClick('sDW');" />
        </g>
        <g id="sGH" class="system" >
            <text class="name" x="429" y="478">Galactic Hub</text>
            <use class="thumb" x="414" y="433" width="30" height="30" xlink:href="#icon-sGH" />
        </g>
        <g id="sGP" class="system" >
            <text class="name" x="588" y="600">Giant Planet</text>
            <text class="name race" x="636" y="444"></text>
            <ellipse class="boundary" cx="608" cy="520" rx="80" ry="103" transform="rotate(50 608,520)" />
            <use class="thumb" x="593"  y="505" width="30" height="30" xlink:href="#icon-rUN" onclick="systemThumbClick('sGP');" />
        </g>
        <g id="sIB" class="system" >
            <text class="name" x="362" y="311">Interstellar Biosphere</text>
            <text class="name race" x="332" y="167"></text>
            <ellipse class="boundary" cx="348" cy="245" rx="100" ry="80" transform="rotate(55 348,245)" />
            <use class="thumb" x="333" y="230" width="30" height="30" xlink:href="#icon-rUN" onclick="systemThumbClick('sIB');" />
        </g>
        <g id="sIM" class="system" >
            <text class="name" x="1027" y="151">Inhabited Moon</text>
            <text class="name race" x="1027" y="35"></text>
            <ellipse class="boundary" cx="1027" cy="91" rx="105" ry="70" />
            <use class="thumb" x="1012" y="76" width="30" height="30" xlink:href="#icon-rUN" onclick="systemThumbClick('sIM');" />
        </g>
        <g id="sIW" class="system" >
            <text class="name" x="197" y="777">Ice World</text>
            <text class="name race" x="197" y="658"></text>
            <ellipse class="boundary" cx="197" cy="714" rx="99" ry="70" />
            <use class="thumb" x="182" y="699" width="30" height="30" xlink:href="#icon-rUN" onclick="systemThumbClick('sIW');" />
        </g>
        <g id="sJW" class="system" >
            <text class="name" x="140" y="603">Jungle World</text>
            <text class="name race" x="140" y="471"></text>
            <ellipse class="boundary" cx="140" cy="534" rx="95" ry="77" />
            <use class="thumb" x="125" y="519" width="30" height="30" xlink:href="#icon-rUN" onclick="systemThumbClick('sJW');" />
        </g>
        <g id="sMS" class="system" >
            <text class="name" x="885" y="540">Multi-Generational Ship</text>
            <text class="name race" x="885" y="450"></text>
            <ellipse class="boundary" cx="885" cy="503" rx="90" ry="70" />
            <use class="thumb" x="870" y="488" width="30" height="30" xlink:href="#icon-rUN" onclick="systemThumbClick('sMS');" />
        </g>
        <g id="sNH" class="system" >
            <text class="name" x="567" y="408">Nebula Habitat</text>
            <text class="name race" x="567" y="280"></text>
            <ellipse class="boundary" cx="567" cy="341" rx="96" ry="78" />
            <use class="thumb" x="552" y="326" width="30" height="30" xlink:href="#icon-rUN" onclick="systemThumbClick('sNH');" />
        </g>
        <g id="sPP" class="system" >
            <text class="name" x="1041" y="440">Polluted Planet</text>
            <text class="name race" x="1041" y="309"></text>
            <ellipse class="boundary" cx="1041" cy="372" rx="102" ry="77" />
            <use class="thumb" x="1026" y="357" width="30" height="30" xlink:href="#icon-rUN" onclick="systemThumbClick('sPP');" />
        </g>
        <g id="sRP" class="system" >
            <text class="name" x="159" y="198">Trapped Rogue Planet</text>
            <text class="name race" x="121" y="45"></text>
            <ellipse class="boundary" cx="142" cy="128" rx="108" ry="85" transform="rotate(45 142,128)" />
            <use class="thumb" x="127" y="113" width="30" height="30" xlink:href="#icon-rUN" onclick="systemThumbClick('sRP');" />
        </g>
        <g id="sSG" class="system hazard" >
            <ellipse class="boundary" cx="363" cy="593" rx="42" ry="50" />
        </g>
        <g id="sSN" class="system hazard" >
            <ellipse class="boundary" cx="740" cy="73" rx="58" ry="44" />
        </g>
        <g id="sWS" class="system" >
            <text class="name" x="1038" y="753">War-Torn System</text>
            <text class="name race" x="1038" y="637"></text>
            <ellipse class="boundary" cx="1038" cy="693" rx="105" ry="69" />
            <use class="thumb" x="1023" y="678" width="30" height="30" xlink:href="#icon-rUN" onclick="systemThumbClick('sWS');" />
        </g>
        <g id="sWW" class="system" >
            <text class="name" x="767" y="287">Water World</text>
            <text class="name race" x="767" y="161"></text>
            <ellipse class="boundary" cx="767" cy="221" rx="104" ry="73" />
            <use class="thumb" x="752" y="206" width="30" height="30" xlink:href="#icon-rUN" onclick="systemThumbClick('sWW');" />
        </g>

        <circle class="navpoint"  cx="91" cy="393" r="10" />
        <circle class="navpoint" cx="485" cy="382" r="10" />
        <circle class="navpoint" cx="493" cy="290" r="10" />
        <circle class="navpoint" cx="547" cy="263" r="10" />
        <circle class="navpoint" cx="586" cy="185" r="10" />
        <circle class="navpoint" cx="876" cy="432" r="10" />
        <circle class="navpoint" cx="893" cy="573" r="10" />
        <circle class="navpoint" cx="933" cy="217" r="10" />

        <text id="version" x="1196" y="796">v1 - 27 Jan 2013</text>
    </g>

    <g id="routes">
    </g>

    <g id="popupSystem" class="popup">
        <rect class="mask" x="0" y="0" width="1200" height="800"/>
        <svg class="display" x="450" y="260" viewport="0,0 300,280">
            <rect class="background" x="0" y="0" width="300" height="280"/>

            <g class="race r01">
                <use class="thumb" x="30" y="20" width="30" height="30" xlink:href="#icon-r01" />
                <text class="name" x="45" y="65">Nillis</text>
            </g>
            <g class="race r02">
                <use class="thumb" x="100" y="20" width="30" height="30" xlink:href="#icon-r02" />
                <text class="name" x="115" y="65">Volois</text>
            </g>
            <g class="race r03">
                <use class="thumb" x="170" y="20" width="30" height="30" xlink:href="#icon-r03" />
                <text class="name" x="185" y="65">Graw</text>
            </g>
            <g class="race r04">
                <use class="thumb" x="240" y="20" width="30" height="30" xlink:href="#icon-r04" />
                <text class="name" x="255" y="65">Niks</text>
            </g>

            <g class="race r05">
                <use class="thumb" x="30" y="85" width="30" height="30" xlink:href="#icon-r05" />
                <text class="name" x="45" y="130">Dell</text>
            </g>
            <g class="race r06">
                <use class="thumb" x="100" y="85" width="30" height="30" xlink:href="#icon-r06" />
                <text class="name" x="115" y="130">Humans</text>
            </g>
            <g class="race r07">
                <use class="thumb" x="170" y="85" width="30" height="30" xlink:href="#icon-r07" />
                <text class="name" x="185" y="130">Shenna</text>
            </g>
            <g class="race r08">
                <use class="thumb" x="240" y="85" width="30" height="30" xlink:href="#icon-r08" />
                <text class="name" x="255" y="130">Yxklyx</text>
            </g>

            <g class="race r09">
                <use class="thumb" x="30" y="150" width="30" height="30" xlink:href="#icon-r09" />
                <text class="name" x="45" y="195">Zum</text>
            </g>
            <g class="race r10">
                <use class="thumb" x="100" y="150" width="30" height="30" xlink:href="#icon-r10" />
                <text class="name" x="115" y="195">Eeepeeep</text>
            </g>
            <g class="race r11">
                <use class="thumb" x="170" y="150" width="30" height="30" xlink:href="#icon-r11" />
                <text class="name" x="185" y="195">Whynoms</text>
            </g>
            <g class="race r12">
                <use class="thumb" x="240" y="150" width="30" height="30" xlink:href="#icon-r12" />
                <text class="name" x="255" y="195">Cholos</text>
            </g>

            <g class="race r13">
                <use class="thumb" x="30" y="215" width="30" height="30" xlink:href="#icon-r13" />
                <text class="name" x="45" y="260">Wollow</text>
            </g>
            <g class="race r14">
                <use class="thumb" x="100" y="215" width="30" height="30" xlink:href="#icon-r14" />
                <text class="name" x="115" y="260">Qossoth</text>
            </g>
            <g class="race rUN">
                <use class="thumb" x="240" y="215" width="30" height="30" xlink:href="#icon-rUN" />
                <text class="name" x="255" y="260">unknown</text>
            </g>
        </svg>
    </g>
</svg>
